@database DiskMaster2.guide
@master DiskMaster2.guide
@$VER: "DiskMaster2.guide 1.113 (04.03.2007)"
@AUTHOR "Rudolph Riedel"
@(C) "1997-2007 by Rudolph Riedel"

@REMARK Use an amigaguide-reader to read this!
@REMARK .1
@node "SetFormat" "SetFormat"
@REMARK .6
@{b}------------------------------------------------------------------------------
                                  SetFormat
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Specifies which, and in what order information is
          displayed in the file display windows.

@{b}Syntax:@{ub} SetFormat [N] [S] [T] [D] [A] [C]

@{b}Arguments:@{ub}

@{b}(no arg):@{ub} Opens a requester allowing you to edit the current format.

@{b}N:@{ub} File name
@{b}S:@{ub} File size - change appearance with @{"SetX" link "SetX" 0}
@{b}T:@{ub} Time - change appearance with @{"SetX" link "SetX" 0}
@{b}D:@{ub} Date
@{b}A:@{ub} File attributes (protection bits)
@{b}C:@{ub} File comment

Characters other than A/C/D/N/S/T are just ignored.


@{b}Examples:@{ub}

 SetFormat

Opens a requester allowing you to edit the current format.

 SetFormat "S N A T D C"

Changes format to SIZE NAME ATTRIBUTES TIME DATE COMMENT

 SetFormat "NSC"

Changes format to SIZE NAME COMMENT
@endnode

@node "Main" "DiskMaster2-Guide Main"
@REMARK .1
@{b}-------------------------------------------------------------------------------
                                DiskMaster2
-------------------------------------------------------------------------------@{ub}
     Copyright © 1997-2007 by @{"Rudolph Riedel" link "Slave" 0} (rudolph.riedel@t-online.de)

                   @{"      Introduction      " link "Intro" 0}
                     @{"       Copyright        " link "Copyright" 0}
                       @{"        The Team        " link "Team" 0}
                         @{"       Disclaimer       " link "Disclaimer" 0}
                           @{"      Installation      " link "Install" 0}

           @{" Functions - quick table " link "Functions" 0}     @{" Functions - ext. table " link "Functions2" 0}

                           @{"    Keyboard Support    " link "Keyboard" 0}

                           @{"      Distribution      " link "Dist" 0}
                           @{"    Tools and Sources   " link "Tools" 0}

                           @{"  Where to get updates  " link "Home" 0}

                         @{" Known Bugs in DiskMaster2  " link "Bugs" 0}
                           @{"   Send your wishes!    " link "Wish" 0}
                           @{"  Questions & Answers   " link "Questions" 0}

           @{"        The Past!       " link "past" 0}      @{"       The Future?      " link "future" 0}
                        @{" Upgrading from older versions " link "upgrade" 0}

                           @{"     Cheers & Hellos    " link "Creds" 0}

                           @{"DiskMaster2 Mailing-list" link "Mailing" 0}

There is a beginner's tutorial from Bonnie Dalzell available online:
 http://www.batw.net/my_dm2_tutorial.html


DiskMaster2 Guide V 1.113 (2007-03-04) for DiskMaster V2.7
@endnode
@node "AddCmd" "AddCmd"
@REMARK .6
@{b}-------------------------------------------------------------------------------
                                  AddCommand
-------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Adds a command to the current command window.

@{b}Syntax:@{ub} AddCmd [title,1#,@{"command" link "cmd" 0}]

@{b}Arguments:@{ub}

@{b}title:@{ub} The text that will appear in the command window to
       identify this command.

@{b}1#:@{ub} A two digit hex-decimal number, specifying the foreground and
    background colors to be used to display the @{b}Title@{ub} text.
    The two numbers used are DiskMaster2 color palette register values.

@{b}Example:@{ub}

 AddCmd   DH0:,10,NewDir DH0:

Adds a command called "  DH0:" to the current command window,
which when activated, changes the current window directory to dh0: .
A button labeled "  DH0:" will be displayed using color 1 as its
foreground and color 0 as its background.
And selected it will be displayed with color 0 as foreground
and color 1 as background.
@endnode

@node "About" "About"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                     About
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Brings up the "About"-Requester.

@{b}Syntax:@{ub} About

@{b}Arguments:@{ub} None

@endnode
@node "AddAutoCmd" "AddAutoCmd"
@REMARK .5
@{b}-------------------------------------------------------------------------------
                                AddAutoCommand
-------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Adds an AutoCommand to the list.

          When a file is double-clicked, DiskMaster2 attempts to determine
          what type of file it is by loading the first 500 bytes of that
          file and comparing this with a list of known patterns.
          If one of these patterns is found in the preload-buffer,
          the corresponding AutoCommand will be executed upon that file.
          This function works non case-sensitive for both the file content
          and for the filenames.

@{b}Syntax:@{ub} AddAutoCmd [data,@{"pattern" link "pattern" 0},@{"command" link "cmd" 0}]

@{b}Arguments:@{ub}

@{b}(no arg):@{ub} If this function is issued with no arguments, a requester will appear
          asking for the proper arguments.

@{b}data:@{ub} The data compared against the first 500 bytes of the file,
      to determine whether or not this AutoCommand is to be executed.

      Have a look in your DOS manual for all the options of
      DOS pattern-matching that work with this function.

      Two special flags may be used in place of the data: TEXT and DEFAULT.
      The TEXT AutoCommand will be executed if no other patterns
      are matched and the file is a text file.
      The DEFAULT AutoCommand will be executed
      if no other patterns are matched.

@{b}Examples:@{ub}

 AddAutoCmd FORM????ILBM#?,View %s

After double-clicking on a file, DiskMaster2 will read the first 500 bytes
of the file and attempt to match it with the pattern "FORM????ILBM#?",
which is the pattern for IFF pictures.

It means: start with "FORM", ignore the next four characters,
"ILBM" must be there and allow unlimited characters following this.

If the pattern is matched, the picture will be shown with the
internal @{"View" link "View" 0} datatypes viewer.

 AddAutoCmd ?PNG#?,Extern Tools:ppshow @{"%s" link "flags" 0}

This is the pattern for PNG pictures, this only requires
one character at the beginning to be ignored.

 AddAutoCmd ??????JFIF#?,Extern Tools:Fastview %s

This is the same for JPEG files, only with more unknown characters.

 AddAutoCmd GIF8#?,#?.GIF,Extern Tools:Fastview @{"%s" link "flags" 0}

The file must end with ".GIF" and must match the data pattern also.

 AddAutoCmd ,#?.PCX,Extern Tools:Fastview @{"%s" link "flags" 0}

The data doesn't matter, but the filename must end with .PCX to match.

 AddAutoCmd (FORM????ILBM#?|?PNG#?|??????JFIF#?|GIF8#?), view %s

IFF, PNG, JPEG and GIF pictures will be shown with @{"View" link "View" 0}.

Merging auto-commands this way might speed things up a bit.

 AddAutoCmd ,(#?.library|#?.datatype|#?gadget|#?-handler|#?.device),
    StdIO "CON:120/50/380/80/Version";Extern Version %s full;wait;stdio CLOSE

This will open a small window when a file ending with ".library", ".datatype",
".gadget", "-handler" or ".device" has been double-clicked displaying it's version-number.
@endnode
@node "SetX" "SetX"
@REMARK .16
@{b}------------------------------------------------------------------------------
                                      SetX
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Sets up some internal variables.

@{b}Syntax:@{ub} SetX [digits=value|IconX=value|IconY=value|Notify|TimePlus|
             UserColors=value|BPen=value|DPen=value|FPen=value|SPen=value|
             appicon=<file>|sizes=value|separator=value|defx=value|defy=value|
             LongCmd|WheelMult=value|Guide=<file>|ReqHideHelp]

@{b}Arguments:@{ub}

@{b}digits:@{ub}  Sets the length of the number-strings e.g. for free space.
         Strings longer than <value> will be converted to the next base.
         Defaults to five digits.
         Maximum is nine digits, minimum is four digits.

@{b}IconX:@{ub} Sets the X-coordinate for the appicon in @{"Iconify" link "Iconify" 0}

@{b}IconY:@{ub} Sets the Y-coordinate for the appicon in @{"Iconify" link "Iconify" 0}

@{b}Notify:@{ub} If set filesystem-notification is turned on.
        By default it is off. Also see @{"Bugs" link "Bugs" 0}.
        You have to reload the dirs before it actually works.

@{b}TimePlus:@{ub} Working as a switch the display toggles every time you use this
          option between simple time display for files/dirs and extended display.
          Simple (default): 13:59 (hour/minutes)
          Extended        : 13:59:16:32 (hour/minutes/seconds/ticks)
          Well, your mileage may very, especially with more "exotic" filesystems.

@{b}UserColors:@{ub} Under OS39 and up DiskMaster2 allocates the used pens to
            prevent color irritations.
            The value you set here is the amount of pens being allocated.
            You may for example open DiskMaster2 on a screen with a depth of eight planes.
            As you won't use all the 256 different colors for DiskMaster2 you can
            limit the amount of "UserColors" to e.g. eight and leave the rest
            of the pens for picture-viewing.
            Default amount is four and DiskMaster2 won't accept less than four.

@{b}BPen:@{ub} Sets the background-pen for the listview-text.
      Defaults to system's [Background Pen] - @{"Pens" link "Pens" 0}
      Valid values are 0-28.
      Normally you should avoid setting this to a different pen
      than the one defined with @{"Pens" link "Pens" 0} for the background.

@{b}DPen:@{ub} Sets the normal text pen for directories.
      Defaults to system's [Highlight Text Pen] - @{"Pens" link "Pens" 0}
      Valid values are 0-28.

@{b}FPen:@{ub} Sets the normal text pen for files.
      Defaults to system's [Text Pen] - @{"Pens" link "Pens" 0}
      Valid values are 0-28.

@{b}SPen:@{ub} Sets the text-pen for selected dirs and files.
      Defaults to system's [HighFill Pen] - @{"Pens" link "Pens" 0}
      Valid values are 0-28.

@{b}AppIcon:@{ub} Let you choose the icon that appears on the WB when
         DiskMaster2 gets iconified.
         The icon used may be of any type, only the bitmap is being used.
         OS3.5 icons are supported where available.
         Defaults to: PROGNAME.

@{b}sizes:@{ub} Let you select from three different ways file-sizes are displayed:
       value=1 : plain                    - 1234567 (default)
       value=2 : like memory-sizes        - 1205 K
       value=3 : with thousands separator - 1.234.567

@{b}separator:@{ub} Let you select a char to be used as thousands-separator.
           This has to be the decimal ASCII of the char you would like to use.
           "." = 46 (default)
           "," = 44
           " " = 32

@{b}defx / defy:@{ub} By setting these you activate the window-layout-scaling as being
             introduced with version 2.5.24.
             Usage is simple. Set these to the screen-dimensions you designed
             your window layout for.
             When you change your screenmode now the window-sizes and positions
             are scaled so it looks nearly as your original layout.
             Works best when scaling to a lower screen-resolution.

             - You always have to set both.

             - This values are only saved to your DiskMaster2.prefs when they
               exactly match with the current used screen-dimensions!

             - And if scaled or just resized - DiskMaster2 will always save
               the current window positions and dimensions!

@{b}LongCmd:@{ub} If set @{"Archive" link "Archive" 0} does not have a limit of 511 chars for the 68K
         version anymore but instead uses a buffer of 128K.
         By default it is off and can only be switched on.
         Be warned that it might not the best idea to switch this on unless you
         have a Shell on your system that can deal with long command-lines.

@{b}WheelMult:@{ub} Sets the mouse-wheel-multiplier for the OS4 mouse-wheel support.
           Determines how many lines will be scrolled on a single mouse-wheel event.
           Defaults to 3.
           Valid values are 1-5.

@{b}Guide:@{ub} The path and file name of the DiskMaster2 guide.  Used by the new
       context-help system.
       Defaults to "PROGDIR:DiskMaster2.guide" (the same directory as the
       DiskMaster2 executable).

@{b}ReqHideHelp:@{ub} By default, DiskMaster2 requesters have a Help button ("?") beside
             the requester text.  This option will prevent that button from
             being displayed.  The button may be re-enabled using @{"DMPrefs" link "DMPrefs" 0}.
             Note: The HELP key is not affected by this option.  Pressing HELP
             always opens the DiskMaster2 guide;

@{b}Examples:@{ub}

Free space is 658932587 bytes:

 SetX digits=9

Will result in displaying "658932587 B"

 SetX digits=8

Will result in displaying "643488 K"

 SetX digits=5

Will result in displaying "628 M"

 SetX IconX=320 digits=5 IconY=128 Notify

This will place the @{"Iconify" link "Iconify" 0} icon close to the center
of a 640*256 screen, setting the number-strings to a length of five
and enables filesystem-notification.

 SetX UserColors=8

Tells DiskMaster2 to allocate the first eight pens of the palette.

 SetX DPen=12

Tells DiskMaster2 to use pen 12 of the color-map for the directory
text displayed in the dir-listings.

 SetX AppIcon=sys:wbstartup/RexxMast.info

Better looking or not, the picture from RexxMast.info will be used as appicon.

 SetX "appicon=sys:my file with icon"

This is what you use when you have an icon with spaces in it's name,
just enclose the whole argument in double-quotes.

 SetX separator=33 sizes=3

File-sizes are displayed like this: 12!345!678
                                        12!345
                                            12

 SetX defx=800 defy=600

Ask DiskMaster2 to scale your window-dimensions and -positions in case
your screen-dimensions differ from this.
@endnode
@node "AddKeyCmd" "AddKeyCmd"
@REMARK .5
@{b}------------------------------------------------------------------------------
                                 AddKeyCommand
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Adds a keyboard command.

@{b}Syntax:@{ub}   AddKeyCmd [key,@{"command" link "cmd" 0}]

@{b}Arguments:@{ub}

@{b}key:@{ub} The key to be pressed for the command.
     Valid are printable keys as well as F1-F10, Help and Del.

     To use a SHIFT-KEY combination just write the -key-
     in uppercase letters: a / A / f1 / F1 / help / HELP

You may define as much as 100 keyboard commands.

@{b}Examples:@{ub}

 AddKey c,Copy @{"%s" link "flags" 0} @{"%d" link "flags" 0}

Press "c" to begin a file copy.

 AddKey C,Copy @{"%s" link "flags" 0}

Press SHIFT+C to start a copy that requests dest path.

 AddKey help,View dh1:guides/DiskMaster2.guide

Pressing "help" opens the file "dh1:guides/DiskMaster2.guide" with @{"View" link "View" 0}
@endnode
@node "AddMenuCmd" "AddMenuCmd"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                AddMenuCommand
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Adds a new menu entry to the current menu strip.

@{b}Syntax:@{ub} AddMenuCmd [menu_name,title,key,@{"command" link "cmd" 0}]

@{b}Arguments:@{ub}

@{b}menu_name:@{ub} The name of an existing or new menu to which
           the new menu item will be added.

@{b}title:@{ub} The text that will appear in the menu to identify this command.
           If you use "Barlabel," here, a separator will be added in the menu.

@{b}key:@{ub} A single printable character to be used in conjunction with the
     @{b}[Right Amiga]@{ub} key to activate this command from the keyboard.
     The character used is not case sensitive.
     However, special characters such as "&" or "©" will require
     the use of the @{b}[Shift]@{ub} or @{b}[Alt]@{ub} keys to invoke the command.

@{b}Examples:@{ub}

 AddMenu Config,About,A,About

Adds an item called "About" under the "Config" menu, which can be activated
by pressing @{b}[Right Amiga]@{ub} + @{b}[A]@{ub}.

 AddMenu Config, Barlabel,

Adds a separator to the "Config" menu.
@endnode
@node "Archive" "Archive"
@REMARK .4
@{b}------------------------------------------------------------------------------
                                    Archive
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Provides a multi-select feature tailor-made for file archivers.

@{b}Syntax:@{ub} Archive [ArcCommand] [Name]

@{b}Arguments:@{ub}

@{b}ArcCommand:@{ub} The external archive command with it`s normal "Add" arguments.

@{b}Name:@{ub} The name of the archive that is to be created.

      If "#" is used here the target-requester is suppressed.


@{b}Note:@{ub} The external archive command is started like with @{"Extern" link "Extern" 0}
      so it's as if the argument is typed into a shell with the current window path.
      With the 68K version command strings of upto 511 chars are generated,
      for the OS4 version the limit is 128K.
      The limit of the 68K version can be extended to 128K as well with the
      "longcmd" option of @{"SetX" link "SetX" 0}.

@{b}Examples:@{ub}

 Archive "LHA -r a"

Opens a requester asking for the archive name, then adds all selected files to
the existing archive, or creates a new archive file.

 Archive "LHA -r a" ram:diskmaster2.lha

Adds all selected files to the existing archive "diskmaster2.lha" in ram:,
or creates a new archive file of that name.

 Archive "somecommand options" #

Starts the given command with the given options only followed by a list
of the selected entries as additional arguments:

"somecommand options file1 file2 file3 ..."
@endnode
@node "Auto" "Auto"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                   Auto
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Uses auto commands on all selected files.

@{b}Syntax:@{ub} Auto [@{"file" link "file" 0}]

@{b}Example:@{ub}

 AddCmd Auto,20,Auto @{"%s" link "flags" 0}

Adds the Command "Auto" to the CommandWindow that when selected will
batch process all selected files.

@endnode
@node "Backpattern" "Backpattern"
@REMARK .2
@{b}------------------------------------------------------------------------------
                              Backpattern
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Loads any size IFF ILBM as a pattern.

* removed in 2.2b3
@endnode
@node "BarFormat" "BarFormat"
@REMARK .6
@{b}------------------------------------------------------------------------------
                                   BarFormat
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Specifies which information and in what order it is to appear
          in the title bar of the Workbench or DiskMaster2 screen.

@{b}Syntax:@{ub} BarFormat [text][%A][%V][%C][%B][%F][%E][%J][%I][%P][%O]
                  [%T][%D][%M][%Y][%W]

@{b}Arguments:@{ub}

@{b}text:@{ub} Any text you like to be displayed in the title-bar.

@{b}%A:@{ub} Displays the current screen/task name of DiskMaster2.
@{b}%V:@{ub} Displays the current version-number of DiskMaster2.

@{b}%C:@{ub} Amount of available free CHIP RAM.
@{b}%B:@{ub} Percentage of available free CHIP RAM.
@{b}%F:@{ub} Amount of available free FAST RAM.
@{b}%E:@{ub} Percentage of available free FAST RAM.
@{b}%J:@{ub} Amount of available free VIRTUAL RAM (OS4).
@{b}%I:@{ub} Percentage of available free VIRTUAL RAM (OS4).
@{b}%P:@{ub} Amount of available free (public) RAM in total.
@{b}%O:@{ub} Percentage of available free (public) RAM in total.

@{b}%T:@{ub} Displays the current time.
@{b}%D:@{ub} Displays the current date.
@{b}%M:@{ub} Displays the current month (abbreviated).
@{b}%Y:@{ub} Displays the current year.
@{b}%W:@{ub} Displays the current weekday (localized).

@{b}Examples@{ub}

 BarFormat " %A %V Chip:%C Fast:%F Total:%P %W - %D.%M.20%Y %T"

Will result in a title bar that might look like this:

 "DM.1 2.5 Chip:1264 K Fast:26853 K Total:28118 K Sonntag - 23.Sep.2001 18:56"


 BarFormat "%A  %V  Chip:%C (%B) Fast:%F (%E) Total:%P (%O)   %W - %D.%M.20%Y  %T"

May look like this:

 "DM.1 2.5.26  Chip:7204 K (99%) Fast:322 M (96%) Total:329M (96%) ..." :-)
@endnode

@node "Batch" "Batch"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                  Batch
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Executes a DiskMaster2 batch file.

@{b}Syntax:@{ub} Batch [@{"file" link "file" 0}]

@{b}(no arg):@{ub} An ASL file-requester will open.

@{b}Examples:@{ub}

 Batch @{"%s" link "flags" 0}

Executes the selected files in the source window as DiskMaster2 script files.

 Batch

Let you select one file from an ASL requester to use.
@endnode
@node "Bugs" "Bugs"
@REMARK .18
@{b}------------------------------------------------------------------------------
                 These are the known Bugs in DiskMaster2
------------------------------------------------------------------------------@{ub}

I can`t answer all your mails anymore but I will react on them,
so please keep this mails as short as necessary, thank you.

And please try to be precise.
An "I think there once was a bug when I tried something like this..."
is not very helpful. ;-)

- Copying files bigger than 128K with an ATAPI ZIP-drive only results
  in destroyed files.

  DiskMaster2 uses 128K as the copy-buffer since 2.4b14 at least.
  Experiments showed that the ZIP just returns garbage with exactly
  this buffer-size, even 128K-1byte and 128K+1byte work okay.
  So this is a bug of the drive, not of DiskMaster2 itself.

  Whenever you discover something like this you should lower
  the MAXTRANSFER value for this drive to 0x1FE00 first
  and if this doesn't help to 0xFE00, this should work
  with even the oldest IDE drives.

  Since 2.5b13 the copy-buffer is some bytes smaller than
  128K as some kind of workaround.

  Thanks to Alex Basana <ax.riez@biaccabi.com> for reporting this "bug"
  and for his patience with my test-versions!

- 'Makedir' is limited to paths with 255 bytes in length total.
  This limitation is caused by the OS`s BCPL strings.
  OS4 does not have this limitation anymore.

- The dir-buffering is somewhat broken as it may happen that
  two windows with the same dir won`t get updated as well as you
  can`t have different (filtered) filelists in these two.

- When removing a disk DiskMaster2 is listing in it`s window the
  icon stays on the WB.

  This is due to flaws in StartNotify() / EndNotify().
  The only way to get around this would be to detect a disk-change
  before it actually happens...
  Therefore this feature is turned off by default.

- When downloading big files from FTP: the progress-display works
  just as nice as it should.
  But when uploading files to FTP: no progress is displayed.

  This is due to MIAMIs transfer buffering.

  The only way I've found to get around this is to write only a small
  amount of data, Close() the file and check how long this takes in total.

  But as it is not necessarily allowed to delete files on a remote
  FTP: server this could mean that the upload won't work at all...

- Dir-Windows overlapping with a command-window always end up behind that
  command-window when the configuration is saved because the windows
  are sorted in a way that first the dir-windows and then the
  command-window(s) are opened.
@endnode
@node "Button" "Button"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                  Button
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Assigns a function to the @{b}S@{ub} (source) and @{b}D@{ub} (destination) gadgets.
          Clicking on @{b}S@{ub} or @{b}D@{ub} gadget will invoke the command.

@{b}Syntax:@{ub} Button "@{"command" link "cmd" 0}"

@{b}Example:@{ub}

 Button "Parent"

When the @{b}S@{ub} or @{b}D@{ub} gadget is selected, the "Parent" function is performed.

@endnode
@node "Check" "Check"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                  Check
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Totals the number of bytes in the specified files or path and
          determines whether or not there is room on the destination device to
          hold the files if copied.
          If there is enough room, the amount of storage space
          that will be left is displayed.
          If there is not enough room, you will be informed.
          All feedback is displayed in the DiskMaster2 screen title bar.

@{b}Syntax:@{ub} Check <path>

@{b}Arguments:@{ub}

@{b}path:@{ub} The AmigaDOS path which is to be totalled and
      compared to the destination.

@{b}Example:@{ub}

 Check @{"%s" link "flags" 0}

Totals the byte count of the selected files and directories and indicates
whether or not they will fit in the destination directory.
@endnode
@node "ChgCmd" "ChgCmd"
@REMARK .1
@{b}------------------------------------------------------------------------------
                              ChangeCommand
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Requests that you select a command to be altered,
          then opens a requester allowing you to edit the command
          without editing the configuration file directly.

@{b}Syntax:@{ub} ChgCmd

@{b}Arguments:@{ub} None

@endnode
@node "Choose" "Choose"
@REMARK .7
@{b}------------------------------------------------------------------------------
                                    Choose
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub}  Open a requester displaying a message and one or more buttons.
           Returns the number of the button pressed or user-supplied text in
           the requester-text flag, @{"%r" link "flags"}, ARexx's RESULT variable,
           and an ARexx variable named BTNVAR (by default)..

           New in v2.5.23:  The requester may also have a string gadget.  When
           used in this manner, the string gadget's text will be returned in
           the requester-text flag, @{"%r" link "flags"}, and ARexx's RESULT variable. The
           BTNVAR ARexx variable still holds the button result.

@{b}Syntax:@{ub}  Choose [TITLE=<text>] [TEXT=<text>] [BUTTONS=<text>] [DEFAULT=<num>]
                [RETBUTTONS] [RETURN=<text>] [ABORT=<num>] [ASKONCE]
                [MINW=<num>] [STRING=<text>] [FILEREQ] [BUTTONVAR=<var>]

@{b}Arguments:@{ub}
@{b}TITLE@{ub}:  Requester's title.
        Default:  "DiskMaster <DM version>"

@{b}TEXT@{ub}:  The main text of the requester.  Multiple lines of text are possible;
       use a "|" to separate them.
       Ex:  TEXT="Hello world!|I'm a requester!"
       Default:  No text.

@{b}BUTTONS@{ub}:  Text for the buttons.  Separate each button with a "|".
          Ex:  BUTTONS="Yes|Maybe|No"
          Default:  "Okay"

@{b}DEFAULT@{ub}:  Sets the button that the Return key is a shortcut for.
          Default:  1, the leftmost button.

@{b}RETBUTTONS@{ub}:  Instead of the number of the button pressed, copy the button's
             name (from BUTTONS) to the @{"%r" link "flags"} flag, RESULT, and BTNVAR.
             Default:  @{"%r" link "flags"} and RESULT contain the number of the button pressed.

@{b}RETURN@{ub}:  Instead of the button's number, copy this text to @{"%r" link "flags"}, RESULT,
         and BTNVAR.
         Separate text for each button with a "|".
         Ex:  RETURN="Cat|Dog|Talk show host|Hamster"
               Pressing button #2 returns "Dog" in @{"%r" link "flags"} & RESULT.

@{b}ABORT@{ub}:  Set DiskMaster2's global abort flag if this button is pressed.
        Default:  The abort flag isn't set.

@{b}ASKONCE@{ub}:  The requester will only appear once.
          Example:  Choose TEXT="Copy?" BUTTONS=Y|N ABORT; Copy %s %d
                      The requester appears before every Copy operation.

                    Choose TEXT="Copy?" BUTTONS=Y|N ABORT ASKONCE; Copy %s %d
                      The requester appears only once, before the first Copy
                      operation.
          Default:  The requester appears every time.

@{b}MINW@{ub}:  The minimum width of the requester's window.
       Default:  The window's width will be just large enough to hold the
                 requester's text and button(s).

@{b}STRING@{ub}:  Adds a string gadget to the requester.
         In string-requester mode:
           - The string is returned in @{"%r" link "flags"} and RESULT.
           - The number of the button pressed is returned in an ARexx variable
             named BTNVAR (this can be changed with the BUTTONVAR option).
         Default:  The requester doesn't have a string gadget.

@{b}FILEREQ@{ub}:  Adds a file-requester gadget to the string gadget.
          This will automatically add a string-gadget to the requester so there
          is no need to also specify STRING.
          Default:  The string-gadget doesn't have a file-requester gadget.


@{b}BUTTONVAR@{ub}:  An ARexx variable to store the button pressed.
             Default:  BTNVAR


@{b}*Notes:@{ub}
- The Return key is a shortcut for the requester's default choice (the button
  with boldface text).  The Esc key will cancel the requester.
- Any text containing spaces must be enclosed in quotation marks.
- Buttons are numbered 1, 2, 3, ..., 0.  The rightmost (last) button is #0.
  Traditionally, this is the "Cancel" button.
- The RETURN text is copied verbatim.  It's up to your script or command line
  to interpret any special characters/sequences it may contain.


@{b}Examples:@{ub}
  Choose TITLE="Req. Test" TEXT="Do you like the Choose command?" BUTTONS="Yes|Erm|No" RETURN=":^)|:^/|:^(" ; Msg @{"%r" link "flags"}
The "Yes" button will display: :^)
The "Erm" button will display: :^/
The "No" button will display:  :^(

  Choose TEXT="Okay to copy?" BUTTONS="Yes|No" ABORT=0; Copy %s %d
The requester will appear before each file is copied.  Pressing "No" will
abort.

  Choose TEXT="Okay to copy?" BUTTONS="Yes|No" ABORT=0 ASKONCE; Copy @{"%s" link "flags"} @{"%d" link "flags"}
The requester will appear before the first file is copied.  Pressing "No"
will abort.  If "Yes" is pressed all selected files will be copied.

  Choose TEXT="Viewer options:" BUTTONS="LORES|HIRES|HIRES LACE" RETBUTTONS; Extern C:MyViewer @{"%s" link "flags"} @{"%r" link "flags"}
In this example, the requester returns the text of the button pressed
(pressing "HIRES" will return "HIRES" for example).

  Choose TEXT="Some|boring|text" BUTTONS="Wonderful|Yawn|Retch" DEFAULT=2 RETBUTTONS; Msg @{"%r" link "flags"}
"Yawn" (button #2) is the default choice.  The requester will return the text
of whichever button you press.

--8<--
  /* ARexx Choose Example */
  OPTIONS RESULTS

  'Choose TITLE="Greetings" TEXT="What would you like to greet?" STRING="World" BUTTONS="Hello|Yo|GoodBye" RETBUTTONS'
  'Msg "' || BTNVAR RESULT || '"'
-->8--

BTNVAR will hold the text of the button pressed ("Hello", for example).
RESULT will be the string gadget's text.
The MSG command will output these two variables ("Hello World").

Here's the above script with a Cancel option:
--8<--
  /* ARexx Choose Example */
  OPTIONS RESULTS

  'Choose TITLE="Greetings" TEXT="What would you like to greet?" STRING="World" BUTTONS="Hello|Yo|GoodBye|Cancel" RETBUTTONS ABORT=0'
  'Msg "' || BTNVAR RESULT || '"'
-->8--
@endnode
@node "Clip" "Clip"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                      Clip
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Copies the requested data from the currently selected
          dir-entry to the clipboard.

@{b}Syntax:@{ub} Clip <@{"flags" link "flags" 0}> ["text"]

@{b}Arguments:@{ub} As you wish, @{"%s" link "flags" 0}, @{"%n" link "flags" 0}, etc.

@{b}Examples:@{ub}

 Clip @{"%n" link "flags" 0}

Copies the name of the currently selected entry to the clipboard.

 Clip @{"%n" link "flags" 0} @{"%a" link "flags" 0}

Copies the name of the currently selected entry and DiskMaster2's current
screen-name as one string to the clipboard with a SPACE between them.

Note that this SPACE is a limitation, you will always get at least one.

 Clip @{"%n" link "flags" 0} "   " @{"%a" link "flags" 0}

May result in some string like this: "foobarfile     DM.2".
@endnode

@node "CloseWindow" "CloseWindow"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                CloseWindow
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Closes the current window.

@{b}Syntax:@{ub} CloseWindow [number]

@{b}Arguments:@{ub}

@{b}number:@{ub} The number of the window to close.

@{b}Examples:@{ub}

 CloseWindow

Closes the active window.

 CloseWindow 5

Closes the fifth window.

* Could be of use in ARexx-Scripts.

@endnode
@node "cmd" "Command"
@REMARK .2
@{b}------------------------------------------------------------------------------
                              The "Command" Keyword
------------------------------------------------------------------------------@{ub}

@{b}command:@{ub} The command-string DiskMaster2 will execute when you selected an
         option from the menu or the CommandWindow, when you double-clicked
         a file and it matched with one of the AutoCommands
         or when you press a key for a Key-Command.

The string may contain several internal or external functions separated by ";".
@endnode
@node "CmdReq" "CmdReq"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                   CmdReq
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Opens a requester, and executes the input as a DM command.

@{b}Syntax:@{ub} CmdReq

@{b}Arguments:@{ub} None


@{b}Example:@{ub}

 CmdReq
  [Requester opens, user types "About", and presses "Okay"]

DiskMaster2's @{"About" link "About" 0} requester will open.
@endnode
@node "Color" "Color"

@REMARK .6
@{b}------------------------------------------------------------------------------
                                    Color
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Sets the RGB values (in hexadecimal) of each color register.

@{b}Syntax:@{ub} Color [Offset=n] [colors]

@{b}Arguments:@{ub}

@{b}(no arg):@{ub} Opens the Colors page of @{"DMPrefs" link "DMPrefs" 0}, allowing you to visually
          change the color palette.

@{b}Offset:@{ub} Specifies which color register to begin placing the values into.
        Defaults to 0.

@{b}colors:@{ub} The set of hexadecimal values specifying the RGB value of the
        color palette register. The color registers are set from left to
        right with each RGB value separated with a space.

        Values may be:
        12-bit: Red, Green, and Blue are each represented by one hex-digit.
                Ex: FFF (white)
        24-bit: Red, Green, and Blue are each represented by two hex-digits.
                Ex: FF0000 (red)

Note:  @{"SaveConfig" link "SaveConfig" 0} generates 'Color Offset=i rrggbb rrggbb' lines with
      no more entries than you have set "UserColors" with @{"SetX" link "SetX" 0}!

@{b}Examples:@{ub}

 Color

Opens @{"DMPrefs" link "DMPrefs" 0} .

 Color 999 222 EEE 358

Sets the first four colors using 12 bit color values.

 Color A0A0A0 000000 EEEEEE 6688AA

Sets the first four colors (0 - 3) using 24 bit color values.

 Color Offset=4 CC4040 C0C048 3333CC 55AA55

Sets color registers 4 - 7 using 24 bit values.
@endnode
@node "Comment" "Comment"
@REMARK .1
@{b}------------------------------------------------------------------------------
                             Comment (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Changes the comment text of the specified file.

@{b}Syntax:@{ub} Comment <@{"file" link "file" 0}> ["text"]

@{b}Arguments:@{ub}

@{b}(no arg):@{ub} Opens a requester with the current comment to be edited.

@{b}Examples:@{ub}

 Comment @{"%s" link "flags" 0}

Opens a requester with the current comment to be edited
for each selected file.

 Comment @{"%s" link "flags" 0} "Babelfish`n`Chips"

Sets the comment "Babelfish`n`Chips" for each selected file.

@endnode
@node "Company" "Now we are a team..."
@REMARK .2
@{b}-------------------------------------------------------------------------------
                                   Co-Author
-------------------------------------------------------------------------------@{ub}

Name	: Richard Backhaus

*Unfortunately Richard left the team a while ago after he has rewritten
 the sort-function in DiskMaster2.
@endnode
@node "Confirm" "Confirm"
@REMARK .4
@{b}------------------------------------------------------------------------------
                                  Confirm
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Opens a requester displaying a message, a "Okay" gadget,
          a "Cancel" Gadget and a text line.
          All text in this requester can be customized.
          If the user selects the "Okay" gadget the requester will
          dissappear and the remainder of the command string
          will be executed.
          If the User selects the "Cancel" gadget, the requester will disappear
          and the remainder of the command string will be disregarded.

@{b}Syntax:@{ub} <"text"> [Okay] [Cancel] [edit text]

@{b}Arguments:@{ub}

@{b}Confirm text:@{ub} The text that will appear as headline in the requester.
      If the text is to contain spaces, it must be included in quotes.

@{b}Continue:@{ub} The text that will be displayed in the "Okay" gadget.

@{b}Stop:@{ub} The text that will be displayed in the "Cancel" gadget.
      If this text is specified, the "Okay" text must also be specified.

@{b}edit text:@{ub} The text that will be displayed in the string gadget.

If any text is to contain spaces, it must be included in quotes.

Keyboard shortcuts are added by placing underscores: "_Okay"


@{b}Examples:@{ub}

 Confirm " Drop dead?" "_Yo!" "_No way!";Quit

Opens a simple requester without string gadget to confirm the action "quit".

 Confirm "Name of encoded file?" "Go!" "Stop!" .uu;Extern uuencodex @{"%s" link "flags" 0} @{"%r" link "flags" 0}

Opens a requester which string gadget contains the string ".uu"
that can be modified by the user and is accessed as @{"%r" link "flags" 0}.
@endnode
@node "Copy" "Copy"
@REMARK .3
@{b}------------------------------------------------------------------------------
                            Copy (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Copies the specified file(s) to the specified destination.

@{b}Syntax:@{ub} Copy <@{"file" link "file" 0}> <@{"dest" link "dest" 0}> [NEWER] @{"[RENAME]" link "xrename" 0} [FORCE] @{"[WARN]" link "xwarn" 0}

@{b}Arguments:@{ub}

@{b}NEWER:@{ub} If this flag is set files will only be copied if the source file
       of the same name is newer than the file in the destination directory
       or if the file does not exist there.

@{b}RENAME:@{ub} If this flag is set then a requester will open allowing you to
        enter a new name for the copy of the file.  @{"More info" link "xrename" 0}.

@{b}FORCE:@{ub} If this flag is set an existing destination file of the same name
       as the source-file is de-protected first.
       This flag has a lower priority than NEWER.

@{b}WARN:@{ub} If this flag is set and a file of the same name exists in the
      destination directory then a requester will appear asking for confirmation
      before overwriting the destination file.  @{"More info" link "xwarn" 0}.

@{b}Examples:@{ub}

 Copy @{"%s" link "flags" 0} @{"%d" link "flags" 0}

Copies selected source files to the destination directory.

 Copy DF0: DF1:

Copies all files from DF0: to DF1:

 Copy @{"%s" link "flags" 0} @{"%p" link "flags" 0}

Will clone the source file adding a ".bak" extension.

 Copy @{"%s" link "flags" 0} @{"%d" link "flags" 0} force

Will copy the selected files even if there are protected files of the
same names in the dest-dir.

@endnode
@node "Copyright" "Copyright"
@REMARK .7
@{b}-------------------------------------------------------------------------------
                                  Copyright
-------------------------------------------------------------------------------@{ub}

@{b}DiskMaster2@{ub} was originally programed by @{b}Greg Cunningham@{ub}

It`s his baby and I`m only a kind of step-father!

On 1997-03-10 I finally received the source-code from Greg.

So at this point I took over development to bring
DiskMaster2 to a more stable and even better point.

DiskMaster2 is now © 1997-2005 by @{"Rudolph Riedel" link "Slave" 0}

The current status of DiskMaster2 is @{b}Mailware@{ub}!

This means that you are allowed to copy and use it for free,
I only ask for an EMail from you in return as a little feedback.

It is strictly forbidden to gain any profit by selling any part of this
distribution in any form!

PD collectors have to ask for my permission first!
And this also includes magazines that want to release DiskMaster2
on one of their cover-disks!

It is also not allowed to distribute only parts of this package,
all files mentioned in @{"Distribution" link "Dist" 0} have to be included.

And finally it is not allowed to use file compression methods like crunching
the exec using PowerPacker/StoneCracker/<other Crap> on any file
in the distribution in order to re-distribute them in that form.

A distribution on Aminet CD`s is always allowed.
As well as I gave my permission for distribution on comp.sys.amiga.binary.


My address is:

@{"Rudolph Riedel" link "Slave" 0}

Hauptstrasse 20
38551 Vollbüttel
Germany

Phone: +0049 05373 331639

But please READ this guide before asking and PLEASE be patient,
I read all your mail but I`m very slow in answering now...

And please don't send me letters, I rarely answer normal snail-mail...
@endnode

@node "Creds" "Howdy Friends!"
@REMARK .4
@{b}------------------------------------------------------------------------------
                                      Credits
------------------------------------------------------------------------------@{ub}

Special Greetings to:

Greg Cunningham    - Thank you!
Jerry W. Rubemeyer - You finally ended my quest - many thanks!

The following persons gave me a hand on creation of this document:

Mike Hendren - thank you for providing the DiskMasterII.Doc!!
J.M.S.oftware - whoever you are, thanks for typing the manual!
Jody Tierney - thanks for reporting the bugs in DiskMaster2.guide 0.13 and in <=0.39!
Bryan K. Williams - thanks for reporting the bugs in DiskMaster2.guide 0.15!
Manuel Martin-Vivaldi - thanks for reporting the bug in "Find" `till 0.22!
                        Thank you also for suggesting the "Question & Answers"
                        and for sending some text for the
                        tools section, describing HTMLess.
Glenn Edward - thank you for reporting almost 100 typos!
               And yes, "computrons" is none. ;-)

Fast Greetings to:

Martin Berndt - Thank you for MultiCX, it`s still my favourite!
Nico Francois - Wherever you are...
Dave Haynie   - Thank you for the hardware!
Heinz Wrobel  - Thank you for updating the OS!
The OS3 Team  - Very nice work guys!
Olaf Barthel  - You better not drink all the beer we own you... :-)
Bernie Meyer  - Amithlon...dead and kicking - it's a shame!
The OS4 Team  - It's a pleasure to work with you!


Personal Greetings to:

Richard Backhaus - my all-purpose coding-slave :-)
Jacques Bojart   - long term brother in arms...
Henrik Doerfler  - I still remember the day when I came from Volker`s place...
Nicolas Franck   - I really want that ProWizard update...
Thomas Kelly     - Thank you for a very interesting Mail-Thread!
Magnus Kutz      - What about a trip to the "Body`n`Soul"?
Ingmar Mix       - I won`t trust you again in dating with girls...
Martin Sass      - Let`s have a party again!
Patrick Schimpke - The szene`s dead anyway... :-(
Timo Treeter     - Thank you for the party-panic, honey.. :^)

And don`t feel angry if you think I should have mentioned you.
Just drop me a mail and we`ll see... 8-)
@endnode

@node "Delete" "Delete"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                   Delete
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Deletes the specified file(s).

@{b}Syntax:@{ub} Delete <@{"file" link "file" 0}> [FORCE]

@{b}Arguments:@{ub}

@{b}FORCE:@{ub} De-protect all files before deleting them.

@{b}Examples:@{ub}

 Delete @{"%s" link "flags" 0}

Deletes selected files and directories in the source window.

 Delete @{"%s" link "flags" 0} FORCE

Will also delete all files that are protected.

@endnode
@node "Deselect" "Deselect"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                  Deselect
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Deselects files and directories in the source window using
          the specified pattern(s) based on DOS pattern-matching.
          This function is not case sensitive.

@{b}Syntax:@{ub} Deselect [@{"pattern" link "pattern" 0}]
                 [pattern2] ... [pattern29] [COMMENT]

@{b}Arguments:@{ub}

@{b}COMMENT:@{ub} This is a switch, when provided the comments are compared
         with the patterns.
         All other arguments after this are ignored.

@{b}Examples:@{ub}

 Deselect

Opens a requester asking for a pattern to match.

 Deselect #?

Deselects all files and directories in the current window.

 Deselect #?.info

Deselects all files and directories ending with ".info".

 Deselect (#?.info|#?.txt|#?.readme)

Deselects all files and directories ending with ".info",
".txt" and ".readme".

 Deselect ftp://#? COMMENT

Deselects all files which comment start with "ftp://" as it is e.g.
the case with IBrowse ftp-downloads.

*hint - read your DOS manual to find out more about pattern-matching.
@endnode
@node "dest" "dest"
@REMARK .1
@{b}------------------------------------------------------------------------------
                            The "dest" Keyword
------------------------------------------------------------------------------@{ub}

@{b}dest:@{ub} The destination path.
      The @{"%d" link "flags" 0} flag may be used in place of this argument to specify
      that the path specified by the destination window is to be used.

@endnode
@node "DevList" "DevList"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                  DevList
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Sets which types of items should appear in the device list.

@{b}Syntax:@{ub} DevList [DEV] [VOL] [ASN]

@{b}Arguments:@{ub}

@{b}DEV@{ub}:  Only Devices (DF0:, DH0:, etc.) will appear in the device list.

@{b}VOL@{ub}:  Only Volumes (Workbench:, Work:, etc.) will appear in the
      device list.

@{b}ASN@{ub}:  Only Assigns (SYS:, S:, etc.) will appear in the device list.

DevList with no arguments will show all devices, volumes, and assigns.


@{b}Examples:@{ub}

 DevList DEV

Only device names will appear in the device list.

 DevList VOL ASN

Volumes and assigns, but not devices, will be shown in the device list.

 DevList
 DevList DEV VOL ASN

In both of the above cases the device list will display everything:
devices, volumes, and assigns.
@endnode
@node "Dirlist" "Dirlist"
@REMARK .3
@{b}------------------------------------------------------------------------------
                              Dirlist (ARexx only)
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Return file data of the current window in a stem var.

@{b}Syntax:@{ub} Dirlist [comment] [date] [time] [protect] [size] [var]
                [sel] [unsel] [file] [dir]

@{b}Arguments:@{ub}

@{b}file:@{ub} List only entries that are files.

@{b}dir:@{ub} List only entries that are directories.

@{b}sel:@{ub} List only entries that are selected.

@{b}unsel:@{ub} List only entries that are unselected.

@{b}comment:@{ub} Additionally write the entries' comment-strings to
         LIST.COMMENT.<index>.
         If an entry has no comment, LIST.COMMENT.<index> is empty.

@{b}date:@{ub} Additionally write the entries' datestamps to
      LIST.DATE.<index> as amount of days since Jan 1st 1978.

@{b}time:@{ub} Additionally write the entries' timestamps to
      LIST.TIME.<index> as an "HH:MM:SS" string.

@{b}protect:@{ub} Additionally write the entries' protection-bits as
         string to LIST.PROTECT.<index> .

@{b}size:@{ub} Additionally write the entries' size as string to
      LIST.SIZE.<index> .

@{b}var:@{ub} Change the base name of the stem var from LIST to whatever
     you specify within the next argument.


Arexx vars that are always filled with information:

@{b}LIST.NAME.0:@{ub} Contains the total amount of entries.

@{b}LIST.NAME.<index>:@{ub} Contains the name of a dir-entry where <index> is
                   a number from 1 to (LIST.NAME.0).

These are filled with information when not using [sel],[unsel] :

@{b}LIST.SEL.0:@{ub} The total amount of selected entries.

@{b}LIST.SEL.<index>:@{ub} 1 if the entry is selected and 0 if the entry
                  is not selected.

@{b}LIST.PATH:@{ub} Contains path of the current dir-window.


These are filled with information when not using [file],[dir] :

@{b}LIST.DIR.<index>:@{ub} 1 if the entry is a dir and 0 if the entry
                  is a file.

@{b}Examples:@{ub}

-----
address DM.1
Dirlist
do i=1 to list.name.0
 say list.name.i
end
-----

Print out the names of all entries from the current dir-window.

-----
address DM.1
Dirlist sel
do i=1 to list.name.0
 say list.name.i
end
-----

Print out the names of all selected entries from the current dir-window.

-----
address DM.1
Dirlist size sel file
do i=1 to list.name.0
 say list.name.i list.size.i
end
-----

Print out the names and sizes of all selected files from
the current dir-window.

-----
address DM.1
Dirlist unsel var quark dir
do i=1 to quark.name.0
 say quark.name.i
end
-----

Print out the names of all selected dirs from the current dir-window using
an alternative stem-var.
@endnode
@node "Disclaimer" "Is this is really necessary?"
@REMARK .3
@{b}-------------------------------------------------------------------------------
                                  Disclaimer
-------------------------------------------------------------------------------@{ub}

@{b}The author is in no way liable for any damages or loss of data
directly or indirectly caused by the information given in this document!
Some of the information could be false other could be easily misused.@{ub}

In other words:
When you try any of the supplied examples on your configuration you
do this completely on your own risk!
DiskMaster2's whole business is about manipulating files.

@{b}So it`s not my fault when you delete your files, you pushed the button!@{ub}

DiskMaster2 itself is provided as is, you use it entirely on your own risk!
@endnode
@node "DiskCopy" "DiskCopy"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                DiskCopy
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Performs sector copy from source floppy disk to destination
          floppy disk(s).

* removed in 2.2b2

@endnode
@node "bonusdir" "Wow, free stuff!"
@REMARK .1
@{b}------------------------------------------------------------------------------
                        User supplied additional files:
------------------------------------------------------------------------------@{ub}

DiskMaster2.prefs  18505 Bytes - An example DiskMaster2.prefs provided by Fabrizio Bartoloni.
Pegasos-config.lha  9285 Bytes - An archive for use with MOS provided by Fabrizio Bartoloni.

@endnode
@node "catdir" "international..."
@REMARK .2
@{b}------------------------------------------------------------------------------
                            Translation files:
------------------------------------------------------------------------------@{ub}

For OS4 the directory names of the catalog files
have been changed to make sure these names are always
displayable using the different font-sets.
For example switching to the greek fontset
and displaying the "français" directory may look odd.


dutch                     - DiskMaster2.catlog 2338 1.11
french                    - DiskMaster2.catlog 2798 1.11
german                    - DiskMaster2.catlog 2456 1.15
greek                     - DiskMaster2.catlog 2184 1.11
italian                   - DiskMaster2.catlog 2366 1.11
norwegian                 - DiskMaster2.catlog 2122 1.11
polish                    - DiskMaster2.catlog 2352 1.11
portuguese                - DiskMaster2.catlog 2550 1.11
spanish                   - DiskMaster2.catlog 2826 1.15
swedish                   - DiskMaster2.catlog 2124 1.11

DiskMaster2.cd            7424 1.15 2005-11-26 - base file
DiskMaster2_dutch.ct      3303 1.11 2003-01-31 - by Johan Banis
DiskMaster2_empty.ct      7336 1.15 2005-11-26 - as the name says
DiskMaster2_french.ct     8138 1.11 2003-01-31 - by Francis Labrie
DiskMaster2_german.ct     8970 1.15 2005-11-26 - by Rudolph Riedel
DiskMaster2_greek.ct      6152 1.11 2003-01-31 - by Dimitris Panokostas
DiskMaster2_italian.ct    7604 1.11 2003-01-31 - by Fabrizio Bartoloni
DiskMaster2_norwegian.ct  8018 1.11 2003-01-31 - by Marius Lauritzen
DiskMaster2_polish.ct     8158 1.11 2003-01-31 - by Mariusz Danilewicz
DiskMaster2_portuguese.ct 7884 1.11 2003-01-31 - by Nuno Berneaud
DiskMaster2_spanish.ct    8378 1.15 2005-11-27 - by Marcelino Santos Aguadero/Javier de las Rivas
DiskMaster2_swedish.ct    6366 1.11 2003-01-31 - by Johan "Graak" Forsberg

Since 2.6 additions to the .catalog files are made in a way that grants
compatibility with older versions so you can still use them but may
find a few strings untranslated.
If you encounter something like this, please consider updating the .ct file
for your language and send it to @{b}rudolph.riedel@t-online.de@{ub}.

@endnode
@node "Dist" "The goodies included..."
@REMARK .4
@{b}------------------------------------------------------------------------------
                You should find these files in the archive:
------------------------------------------------------------------------------@{ub}

@{"Bonus" link "bonusdir" 0}
@{"Catalogs" link "catdir" 0}
@{"Icons" link "icondir" 0}
@{"Rexx" link "scripts" 0}
DiskMaster2              103072 Bytes 2.6    - The OS3.x 68K SAS-C compiled binary.
DiskMaster2.guide        216254 Bytes 1.112  - The document you are currently reading.
DiskMaster2.guide.info     3211 Bytes        - A project-icon from Mason.
DiskMaster2.info           1709 Bytes        - An exclusive DiskMaster2 Mason-Icon.
DiskMaster2.OS4          295488 Bytes 2.6    - The OS4 PPC GCC compiled binary.
DiskMaster2.OS4.info       1709 Bytes

MyDiskMaster2.prefs       10830 Bytes 3.6    - My very own DiskMaster2.prefs provided as
                                               example on how DiskMaster2 could look like.
MyDiskMaster2.prefs.info   2202 Bytes        - Another project-icon from Mason.
@endnode
@node "Icondir" "Look at these!"
@REMARK .3
@{b}------------------------------------------------------------------------------
                              Alternative Icons:
------------------------------------------------------------------------------@{ub}

DM2_Alan_Bailey.info        6345
DM2_Eddie_Ivanov.info       1567
DM2_Fabrizio_Bartoloni.info 2310
DM2_Glenn_Edward.info       1344
DM2_Nils_Goers.info         1519
DM2_PatGiver_EdVishoot.info  565

DM2_Original.info           1586
@endnode
@node "scripts" "Arexx-Magic"
@REMARK .3
@{b}------------------------------------------------------------------------------
                           ARexx-Scripts included:
------------------------------------------------------------------------------@{ub}

First of all - Sorry!
Updating this drawer I soon had to admit that I got lost among all these examples.
Please check the scripts yourself, every one should come with some
useful information in the header on how to use them and who wrote it.

If you find something that is not working but desperately needed by you
then please ask for it on the @{"mailing list" link "mailing"}.

ArcMast.rexx            3146 2.0
ArcTrans.rexx           2861 1.1
AssignList.rexx         1723
Decrunch.rexx            533 1.0
DM-Vir.DM               2765 1.1
DMArcList2Win2.rexx     3631 1.3
DMArcSelExt2.rexx       1603 1.3
DMSpopper.rexx          1162 1.0
DM_CmtAll.rexx          1008 1.4a
DM_CopyChkVer.rexx      2386 1.3
DM_CopyCmt.rexx          701 1.1
DM_Dest2Source.rexx     1298 1.1
DM_Dir2Key.rexx          597 1.1
DM_Dir2Menu.rexx         480 1.1
DM_DirLevel.rexx        1734 1.1
DM_ExecOnMany.rexx      2045 1.3
DM_Filter.rexx          1723 1.4
DM_FontsToo.rexx         413 1.1
DM_GotoDelDir.rexx       294 1.1
DM_IBrowse2CmtURL.rexx   981 1.2
DM_IBrowseShowFile.rexx  437 1.0
DM_IconsToo.rexx         304 1.1
DM_IdxRename.rexx       2016 1.2
DM_MultiExec.rexx       1099 1.4
DM_MultiRename.rexx     3427 1.3
DM_PathHist.rexx        1040 1.3
DM_PathHistAll.rexx     2229 1.3
DM_PatternRename.rexx   5702 1.3
DM_QuickDirList          951 ---
DM_Rename2Cmt.rexx       524 1.1
DM_RootRAM.rexx         1218 1.0
DM_SelectByDate.rexx     758 1.0
DM_SelectBySize.rexx     452 1.1
DM_TTMLoadIcon.rexx     1655 1.3
DM_VirusCheck.rexx       599 1.1
Duplicate.rexx           135 1.0
FastDMView.rexx          680 3.0
FileShow.rexx           9000 3.1
Parents.dmrx            2150 1.3
Sub_FileRecog.REXX      3344 2.8
VisageDMSlide.dmrx      1118 1.0
WindowTest.rexx          246 2.0
@endnode
@node "DMPrefs" "DMPrefs"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                   DMPrefs
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Requester allowing various DiskMaster2 options to be set.

@{b}Syntax:@{ub} DMPrefs

@{b}Arguments:@{ub} None

@{b}Using DMPrefs:@{ub}
  The DMPrefs requester consists of tabbed pages containing DM2 options, a
status bar, and three buttons to accept or reject user changes.

  Most gadgets support tab-cycling (the @{b}Tab@{ub} key activates the next gadget, or
@{b}Shift-Tab@{ub} activates the previous gadget).  Gadgets which cannot be tab-cycled
have keyboard shortcuts to activate them.

  See an unfamiliar option?  Just press the Help key while the mouse pointer is over
the gadget, and the DiskMaster2 guide will open to the relevant page.
The location of the DiskMaster2 guide may be set using DMPrefs or @{"SetX" link "SetX" 0} Guide.

@{b}Tabbed pages:@{ub}
@{b}Main@{ub}    - Options which affect all, or large parts, of DiskMaster2.
@{b}Windows@{ub} - Options which affect directory windows.
@{b}Fonts@{ub}   - No reliable data exists as to the purpose of this page. ;-)
@{b}Colors@{ub}  - Choose your colors here.  Blue.  No, yellow!  Yaaaaaahh!

@{b}Status bar:@{ub}
  The status bar displays the purpose, or DM2 command name and argument, of
the gadget beneath the mouse pointer.  It also displays if this setting has
been changed.

@{b}The three buttons:@{ub}
@{b}Save@{ub}   - Applies any changed settings, and then opens a requester allowing
         the current configuration to be saved.
         Equivalent to the @{b}Use@{ub} button plus the @{"SaveConfig" link "SaveConfig" 0} command.
@{b}Use@{ub}    - Applies any changed settings.
@{b}Cancel@{ub} - Closes the DMPrefs requester; discarding any changed settings.
         The @{b}Esc@{ub} key will also cancel the DMPrefs requester.

@{b}Notes:@{ub}
- The "changed/unchanged" status reported by the @{b}status bar@{ub} is not especially
  intelligent.  If you change a setting and then reset it to it's previous
  state the status bar will still report "changed".
  Tease it if you must; just don't report this as a bug. :-)
- Changes to the text-entry portion of the @{b}AppIcon@{ub} gadget (@{b}Main@{ub} page) never
  update the "changed" status.  Any changes will be applied by @{b}Save@{ub} or @{b}Use@{ub},
  however.
- For further explanation of various options also check @{"SetX" link "SetX" 0}.

@{b}Example:@{ub}

 DMPrefs

The DiskMaster2 preferences requester appears.
@endnode
@node "Dupe" "Dupe"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                   Dupe
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Selects or deselects duplicate files.

@{b}Syntax:@{ub} Dupe [C] [D] [N] [S] [-]

@{b}Arguments:@{ub}

@{b}C:@{ub} Compare all files from the source-window against the files from
   the destination window if there are some with identical comments.
   Will always fail for files with no comment!

@{b}D:@{ub} Compare the file`s creation dates.

@{b}N:@{ub} Compare the file`s names.

@{b}S:@{ub} Compare the file`s sizes.
   'Dupe S' will always fail on directories!

@{b}-:@{ub} Matching files get deselected.

@{b}Examples:@{ub}

 Dupe S

Mark all files in the source-window as selected that have the same
size than any of the files in the destination window.

 Dupe N S

Mark all files in the source-window as selected that have the same
name and size than some file in the destination window.

 Dupe C - D S

Mark all files in the source-window as un-selected that have the same
comment, date and size than some file in the destination window.

 Dupe S; Dupe N

Actually two commands this will mark all files as selected
that are either of the same size OR the same name.
@endnode
@node "Expand" "Expand"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                  Expand
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Specifies whether the expanded AmigaDOS volume and path names or
          unexpanded device names will be used to display directory paths.

@{b}Syntax:@{ub} Expand [ON|OFF]

@{b}Arguments:@{ub}

@{b}(no arg):@{ub} Toggles between the two modes.

@{b}ON:@{ub} Specifies that all paths are to be expanded to their fullest.

@{b}OFF:@{ub} Specifies that physical and logical device names will be used as
     part of the directory path.

@{b}Example:@{ub}

 Expand ON

Tells DiskMaster2 to expand all path names.
@endnode
@node "Extern" "Extern"
@REMARK .2
@{b}------------------------------------------------------------------------------
                             Extern (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Use external programs as DiskMaster2 functions.

@{b}Syntax:@{ub} Extern [S=value] [@{"command" link "cmd" 0}] [args]

@{b}Arguments:@{ub}

@{b}S=value:@{ub} This optional argument determines the stack-size for the
         externally executed program.
         >value< is decimal and defaults to 8192 which is also the minimum.
         This argument @{b}MUST@{ub} be the first or is otherwise
         interpreted as part of the [args].

@{b}args:@{ub} Arguments normally used by the external program. The "@{"%s" link "flags" 0}" and
      "@{"%d" link "flags" 0}" flags may be used to specify source and destination directories,
       or selected source files or directories.

       To run multiple external functions from the same command,
       separate them by placing a "\\" between each function.

@{b}Examples:@{ub}

 Extern munpack @{"%s" link "flags" 0} -f >nil:

Runs the "MUnpack" command providing the first selected file in the source
window as the name of the file to be "de-mimed".

 Extern s=30000 Tools:GfxCon %s Format GIF

Executes the program "GFXCon" with a stack of 30000 bytes.
@endnode
@node "file" "File"
@REMARK .1
@{b}------------------------------------------------------------------------------
                            The "File" Keyword
------------------------------------------------------------------------------@{ub}

@{b}file:@{ub} The file or drawer you selected to perform a function on.
      This could be provided absolute or as @{"%s" link "flags" 0}.

@endnode
@node "Filestat" "Filestat"
@REMARK .4
@{b}------------------------------------------------------------------------------
                              Filestat (ARexx only)
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Returns information about the file in question.

@{b}Syntax:@{ub} Filestat <file> [var]

@{b}Arguments:@{ub}

@{b}file:@{ub} A valid filename with complete path to it.

@{b}var:@{ub} Change the base name of the stem var from LIST to whatever
     you specify within the next argument.


Arexx vars that are always filled with information:

@{b}LIST:@{ub} Contains "-1" when the file was not found,
      "0" if the file exists and "1" if it's a dir.
      Alternatively the ARexx internal stem RESULT
      also holds the return value.

@{b}LIST.COMMENT:@{ub} Contains the file's comment.

@{b}LIST.DATE:@{ub} Contains the file's date in days from jan 1st 1978.

@{b}LIST.TIME:@{ub} Contains the file's time as "HH:MM:SS".

@{b}LIST.PROTECT:@{ub} Contains the file's protection bits.

@{b}LIST.SIZE:@{ub} Contains the file's size.


@{b}Examples:@{ub}

-----
address DM.1
Filestat 'c:list'
say LIST.COMMENT LIST.DATE LIST.SIZE LIST.PROTECT
-----

Print out the file-data for "c:list".

-----
address DM.1
Filestat 'c:list' var boing
say BOING.COMMENT BOING.DATE BOING.SIZE BOING.PROTECT
- ---

Print out the file-data for "c:list" out of the var "BOING".

-----
address DM.1
filestat 'c:novalidfileofthisname'
say LIST
-----

Print out "-1" as the file could not be found.

----
adress DM.1
filestat 'c:list'
say result
say list
----

Will most probably print out:

1
1

----
adress DM.1
filestat 'c:novalidfileofthisname'
say list
say result
----

Will print out:

-1
1

This is because "result" will always return the last op's status.
@endnode
@node "Find" "Find"
@REMARK .3
@{b}------------------------------------------------------------------------------
                           Find (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Searches the path for files matching the current pattern.
          When a file is found which matches the specified pattern, a requester
          will appear asking if you want to open a window displaying
          the directory where the file was found, skip to the next
          matching file or cancel the search.

@{b}Syntax:@{ub} Find [@{"file" link "file" 0}]

@{b}Examples:@{ub}

 Find @{"%s" link "flags" 0}

Search the selected paths using the current pattern.

 SetPattern "*.txt"; Find DF0:

Search DF0: for files ending with ".txt".
@endnode
@node "flags" "Flags"
@REMARK .5
@{b}------------------------------------------------------------------------------
                               DiskMaster2 Flags
------------------------------------------------------------------------------@{ub}

%a - The name of the ARexx-port / public-screen / task
%b - The amount of selected entries
%c - The comment associated with a file or directory - no comment no string...
%d - The destination path
%n - The name of a file or directory
%p - The source path
%r - The string from a requester (also returned in RESULT for ARexx)
%R - The unquoted string from a requester (even if the string contains spaces).
%s - The selected file or drawer with full path

@endnode
@node "Font" "Font"
@REMARK .7
@{b}------------------------------------------------------------------------------
                                  Font
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Changes the fonts used for various elements of the GUI.

@{b}Syntax:@{ub} Font [DIRWIN=name size] [REQTEXT=name size] [REQBUTTONS=name size]
        [MENU=name size] [DIRGAD=name size] [CMDWIN=name size] [READER=name size]

@{b}Arguments:@{ub}

@{b}DIRWIN=name size:@{ub} The font to use for directory windows.
                  Default is the screen's font.

@{b}REQTEXT=name size:@{ub} The font to use for the text inside requesters.
                   Defaults to the screen's font.

@{b}REQBUTTONS=name size:@{ub} The font to use for requester buttons.
                      Defaults to the screen's font.

@{b}MENU=name size:@{ub} The font to use for menu items.
                Defaults to the screen's font.

@{b}DIRGAD=name size:@{ub} The font to use for directory gadgets.
                  Defaults to the screen's font.

@{b}CMDWIN=name size:@{ub} The font to use for command windows.
                  Default is the screen's font.

@{b}READER=name size:@{ub} The font to use for the reader windows.
                  Limited to fixed-width fonts it will fallback
                  to Topaz in case the screen's font is proportional.


@{b}Notes:@{ub}
- Support for using "Font fontname size" to set the directory window's font
  has been removed.  Use the "DIRWIN" keyword instead.
- To open a font-requester just supply one of the keywords all alone.
- The size argument defaults to 8 points.
- The original format of "fontname/size". is no longer supported.


@{b}Examples:@{ub}

 Font DIRWIN=clean 8

Sets the window's font to clean.font, 8 point.

 Font MENU=xcourier 13 REQTEXT=opal 12

Menus will use XCourier.font, 13 point, and requesters will use Opal.font,
12 point.

 Font DIRWIN=clean 8 REQBUTTONS=byte 12

Set window font to clean.font, 8 point. Requester-buttons use byte.font size 12.

 AddMenu Config, Change Menu-Font, Font MENU
 Font MENU

A font requester opens allowing you to choose a font for the menus.
@endnode

@node "Format" "Format"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                  Format
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Formats one or more floppy disks.

* removed in 2.2b2

@endnode
@node "functions2" "Functions"
@REMARK .2
@{b}-------------------------------------------------------------------------------
              DiskMaster2 Functions - @{"  General Information  " link "GInfo" 0}
-------------------------------------------------------------------------------@{ub}

@{"     About      " link "About" 0} Brings up the "About"-Requester.

@{" AddAutoCommand " link "AddAutoCmd" 0} Adds an AutoCommand to the list.

@{"   AddCommand   " link "AddCmd" 0} Adds a command to the current command window.

@{" AddKeyCommand  " link "AddKeyCmd" 0} Adds a keyboard command.

@{" AddMenuCommand " link "AddMenuCmd" 0} Adds a new menu entry to the current menu strip.

@{"    Archive     " link "Archive" 0} Provides a multi-select feature tailor-made for file archivers.

@{"      Auto      " link "Auto" 0} Uses auto commands on all selected files.

@{"   BarFormat    " link "BarFormat" 0} Specifies the screen-title.

@{"     Batch      " link "Batch" 0} Executes a DiskMaster2 batch file.

@{"     Button     " link "Button" 0} Assigns a function to the @{b}S@{ub} (source) and @{b}D@{ub} (destination) gadgets.

@{" ChangeCommand  " link "ChgCmd" 0} Allows to change an existing command.

@{"     Check      " link "Check" 0} Totals the number of bytes in the specified files or path.

@{"     Choose     " link "Choose" 0} Opens a requester displaying a message and one or more buttons.

@{"      Clip      " link "Clip" 0} Copies the requested data from the currently selected dir-entry to the clipboard.

@{"  CloseWindow   " link "CloseWindow" 0} Closes a window.

@{"     CmdReq     " link "CmdReq" 0} Opens a requester, and executes the input as a DiskMaster2 command.

@{"     Color      " link "Color" 0} Sets the RGB values (in hexadecimal) of each color register.

@{"    Comment     " link "Comment" 0} Changes the comment text of the specified file.

@{"    Confirm     " link "Confirm" 0} Opens a confirmation requester.

@{"      Copy      " link "Copy" 0} Copies the specified file(s) to the specified destination.

@{"     Delete     " link "Delete" 0} Deletes the specified file(s).

@{"    Deselect    " link "Deselect" 0} Deselects files and directories in the source window.

@{"    DevList     " link "DevList" 0} Sets which types of items should appear in the device list.

@{"    DMPrefs     " link "DMPrefs" 0} Requester allowing various DiskMaster2 options to be set.

@{"      Dupe      " link "Dupe" 0} Selects or deselects duplicate files.

@{"     Expand     " link "Expand" 0} Specifies if directory-paths are to be expanded to their volume names.

@{"     Extern     " link "Extern" 0} Use external programs as DiskMaster2 functions.

@{"      Find      " link "Find" 0} Searches the path for files matching the current pattern.

@{"      Font      " link "Font" 0} Changes the fonts used for various elements of the GUI.

@{"      GUI       " link "GUI" 0} Blocks user-input.

@{"   HostScreen   " link "HostScreen" 0} Use a public screen as host.

@{"    HideDev     " link "HideDev" 0} Filters the device list to exclude certain names.

@{"      Icon      " link "Icon" 0} Creates a default icon for a given @{"file" link "file" 0}.

@{"    Iconify     " link "Iconify" 0} Sends DiskMaster2 to suspend-mode.

@{"      Info      " link "Info" 0} Pops up Information requester to edit tooltypes of a given @{"file" link "file" 0}.

@{"      Last      " link "Last" 0} Opens a requester to re-display the last message.

@{"   LoadConfig   " link "Batch" 0} Another name for @{"Batch" link "Batch" 0}.

@{"      Lock      " link "Lock" 0} Locks a window as either a source or destination window.

@{"    Makedir     " link "Makedir" 0} Creates a new directory.

@{"      Move      " link "Move" 0} Moves the specified file(s) to the specified destination.

@{"      Msg       " link "Msg" 0} Displays text in the DiskMaster2 screen title bar.

@{"     NewDir     " link "NewDir" 0} Changes the directory path of the source window.

@{"   NewScreen    " link "NewScreen" 0} Opens a new screen for DiskMaster2.

@{"   OpenWindow   " link "OpenWindow" 0} Opens a file display or command window.

@{"      Pack      " link "Pack" 0} Compresses a file using XPK.

@{"     Parent     " link "Parent" 0} Displays the contents of the parent directory.

@{"      Pens      " link "Pens" 0} Allows to customize color register usage.

@{"    PrintDir    " link "PrintDir" 0} Prints selected files/dirs in source window using current format.

@{"    Protect     " link "Protect" 0} Changes protection/attribute bits on specified file(s).

@{"     Quiet      " link "Quiet" 0} Suppresses all messages for the current command-line.

@{"      Quit      " link "Quit" 0} Exits DiskMaster2.

@{"      Read      " link "Read" 0} Opens DiskMaster2's built-in file reader.

@{"   Recursion    " link "Recursion" 0} Enables or disables recursion.

@{"     Rename     " link "Rename" 0} Renames specified files and/or directories.

@{"     Reset      " link "Reset" 0} Resets DiskMaster2 to a primitive state.

@{"   ReqPattern   " link "ReqPattern" 0} Opens a requester asking for a pattern.

@{"      REXX      " link "REXX" 0} Executes the specified ARexx program or string.

@{"      Root      " link "Root" 0} Displays the root directory of the current window path.

@{"   SaveConfig   " link "SaveConfig" 0} Saves a batch file that will recreate the current environment exactly.

@{"    ScrBack     " link "ScrBack" 0} Pushes the DiskMaster2 screen behind other existing screens.

@{"    ScrFront    " link "ScrFront" 0} Brings the DiskMaster2 screen to the front of other existing screens.

@{"     Select     " link "Select" 0} Selects files and directories in the source window.

@{"    SetDate     " link "SetDate" 0} Changes the file date and time of the specified file(s).

@{"   SetFormat    " link "SetFormat" 0} Specifies the way files are displayed.

@{"   SetPattern   " link "SetPattern" 0} Sets the pattern for the current operation.

@{"      SetX      " link "SetX" 0} Sets up some internal variables.

@{"     Single     " link "Single" 0} Specifies to process only one file at a time.

@{"      Sort      " link "Sort" 0} Changes the sorting method.

@{"     StdIO      " link "StdIO" 0} Opens or closes an Input/Output window.

@{"      Swap      " link "Swap" 0} Swaps the directory paths between two windows.

@{"   Swapselect   " link "Swapselect" 0} Toggles all files from selected state to deselected state and vice versa.

@{"  TitleFormat   " link "TitleFormat" 0} Specifies the window-titles.

@{"     UnLock     " link "UnLock" 0} Unlocks the selected window, or all windows.

@{"     UnMark     " link "UnMark" 0} Enables or Disables automatic deselection of files during operations.

@{"     Unpack     " link "Unpack" 0} Decompresses a file using XFD.

@{"      View      " link "View" 0} A simple datatypes viewer.

@{"      Wait      " link "Wait" 0} Causes a timed delay or a cued delay.

@{"     Window     " link "Window" 0} Selects a window, making it the source window.


These are for use with ARexx only:

@{"    Dirlist     " link "Dirlist" 0} Returns file data of the current window in a stem var.

@{"    Filestat    " link "Filestat" 0} Returns information about the file in question.

@{"   GetHistory   " link "GetHistory" 0} Returns the contents of a string history.

@{"    SetList     " link "SetList" 0} Displays items in a list in a file display window.

@{"     Status     " link "Status" 0} Returns string in result for ARexx programs.

@{"    WinInfo     " link "WinInfo" 0} Returns information about the open windows.


@{"Removed Functions" link "removed" 0}
@endnode
@node "functions" "Functions"
@REMARK .14
@{b}-------------------------------------------------------------------------------
              DiskMaster2 Functions - @{"  General Information  " link "GInfo" 0}
-------------------------------------------------------------------------------@{ub}

@{"     About      " link "About" 0}  @{"     Delete     " link "Delete" 0}  @{"      Move      " link "Move" 0}  @{"    ScrFront    " link "ScrFront" 0}
@{" AddAutoCommand " link "AddAutoCmd" 0}  @{"    Deselect    " link "Deselect" 0}  @{"      Msg       " link "Msg" 0}  @{"     Select     " link "Select" 0}
@{"   AddCommand   " link "AddCmd" 0}  @{"    DevList     " link "DevList" 0}  @{"     NewDir     " link "NewDir" 0}  @{"    SetDate     " link "SetDate" 0}
@{" AddKeyCommand  " link "AddKeyCmd" 0}  @{"    Dirlist     " link "Dirlist" 0}  @{"   NewScreen    " link "NewScreen" 0}  @{"   SetFormat    " link "SetFormat" 0}
@{" AddMenuCommand " link "AddMenuCmd" 0}  @{"    DMPrefs     " link "DMPrefs" 0}  @{"   OpenWindow   " link "OpenWindow" 0}  @{"    SetList     " link "SetList" 0}
@{"    Archive     " link "Archive" 0}  @{"      Dupe      " link "Dupe" 0}  @{"      Pack      " link "Pack" 0}  @{"   SetPattern   " link "SetPattern" 0}
@{"      Auto      " link "Auto" 0}  @{"     Expand     " link "Expand" 0}  @{"     Parent     " link "Parent" 0}  @{"      SetX      " link "SetX" 0}
@{"   BarFormat    " link "BarFormat" 0}  @{"     Extern     " link "Extern" 0}  @{"      Pens      " link "Pens" 0}  @{"     Single     " link "Single" 0}
@{"     Batch      " link "Batch" 0}  @{"    Filestat    " link "Filestat" 0}  @{"    PrintDir    " link "PrintDir" 0}  @{"      Sort      " link "Sort" 0}
@{"   LoadConfig   " link "Batch" 0}  @{"      Find      " link "Find" 0}  @{"    Protect     " link "Protect" 0}  @{"     Status     " link "Status" 0}
@{"     Button     " link "Button" 0}  @{"      Font      " link "Font" 0}  @{"     Quiet      " link "Quiet" 0}  @{"     StdIO      " link "StdIO" 0}
@{"     Check      " link "Check" 0}  @{"   GetHistory   " link "GetHistory" 0}  @{"      Quit      " link "Quit" 0}  @{"      Swap      " link "Swap" 0}
@{" ChangeCommand  " link "ChgCmd" 0}  @{"      GUI       " link "GUI" 0}  @{"      Read      " link "Read" 0}  @{"   Swapselect   " link "Swapselect" 0}
@{"     Choose     " link "Choose" 0}  @{"    HideDev     " link "HideDev" 0}  @{"   Recursion    " link "Recursion" 0}  @{"  TitleFormat   " link "TitleFormat" 0}
@{"      Clip      " link "Clip" 0}  @{"   HostScreen   " link "HostScreen" 0}  @{"     Rename     " link "Rename" 0}  @{"     UnLock     " link "UnLock" 0}
@{"  CloseWindow   " link "CloseWindow" 0}  @{"      Icon      " link "Icon" 0}  @{"   ReqPattern   " link "ReqPattern" 0}  @{"     UnMark     " link "UnMark" 0}
@{"     CmdReq     " link "CmdReq" 0}  @{"    Iconify     " link "Iconify" 0}  @{"     Reset      " link "Reset" 0}  @{"     Unpack     " link "Unpack" 0}
@{"     Color      " link "Color" 0}  @{"      Info      " link "Info" 0}  @{"      REXX      " link "REXX" 0}  @{"      View      " link "View" 0}
@{"    Comment     " link "Comment" 0}  @{"      Last      " link "Last" 0}  @{"      Root      " link "Root" 0}  @{"      Wait      " link "Wait" 0}
@{"    Confirm     " link "Confirm" 0}  @{"      Lock      " link "Lock" 0}  @{"   SaveConfig   " link "SaveConfig" 0}  @{"     Window     " link "Window" 0}
@{"      Copy      " link "Copy" 0}  @{"    Makedir     " link "Makedir" 0}  @{"    ScrBack     " link "ScrBack" 0}  @{"    WinInfo     " link "WinInfo" 0}

@{"Removed Functions" link "removed" 0}
@endnode
@node "future" "What`s next?"
@REMARK .10
@{b}------------------------------------------------------------------------------
                        The road-map for future-releases:
------------------------------------------------------------------------------@{ub}

- Fix all the bugs.

- Getting rid of all this Kick 1.3 hardcore intuition code!!!
- Reaction GUI

- Add more of the user-requested features.

- More keys used and accessible, e.g. CTRL,ALT for key-commands.

- Directory buffers

- Add much more information to the list and provide more "exotic" examples.

- More scripts to be bundled with this release.

Most certainly not in this succession.

An OS4 native PPC binary is already available! (2003-10-03)

I'm OS4 beta-tester now, as well as @{"Jody" link "SmegHead" 0}.

And I believe in OS4!

By now I had the opportunity to "borrow" an A1-board,
I "only" had to supply what else was needed to make it
a working system.

DiskMaster2 native PPC for OS4 exists and works as nice on the A1
as the 68k version on Amithlon and I build both versions
from a single set of source-codes now.
2.5.29 was the first to be included as contribution on the pre-release CD.


If you like to donate some EUR to encourage further
development - donations are very welcome!!

Thanks to your donations I was able to buy an used copy of Amithlon which
sped-up things for me a lot since the compile-times dropped significantly.

If you don't mind to send me something thru snail-mail you can
find my address @{"here" link "Copyright" 70}.
Or if you happen to live in the EU you could also send me something thru
a normal bank-transfer, just ask for my account information.

I promise that I spend any cent I receive on hardware or software
that will help me to continue Amiga development!

And don't forget about @{"Jody Tierney" link "SmegHead" 0},
mails of support (and donations!) should be directed to him, too!

Additionally - please forgive me if my choice of words is not perfect,
English is not my mother tongue and I have a hard time writing this
as well as I feel a little bad asking at all.

And a big -thank you!- again to those kind people who already
sent me a donation!


Next there is MorphOS.
DiskMaster2 is reported to work with MorphOS.
At least I won't do anything to prevent DiskMaster2 from
running under MorphOS - why should I?
But I can't actively support MorphOS as I would have no
way to test a native MOS version.

Then there is AROS.
I have been asked a couple of times to port DiskMaster2 to AROS
and I basically have no problem with this.
You still need Linux however (AFAIK) to compile AROS aplications
and Linux is something I only will touch if I really really have to.

At last there is Amithlon.
Or do I have to say there *was* Amithlon?
This was the most promising product at all over the last
years and now it appears to be plain dead.
@endnode

@node "GetHistory" "GetHistory"
@REMARK .3
@{b}------------------------------------------------------------------------------
                             GetHistory (ARexx Only)
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub}  Returns the contents of a string history.

@{b}Syntax:@{ub}  GetHistory [VAR=<var>] [HISTORY=Path|Reader|Misc]

@{b}Arguments:@{ub}
@{b}VAR@{ub}:  The base name of a stem var that will hold the string history's contents.
      <var>.count holds the total number of entries in the history.
      Default:  LIST.

@{b}HISTORY@{ub}:  Which string history to copy to <var>.  The current choices are:
            Path - Strings from Directory windows' path gadgets, and also
                   from some commands such as MakeDir.
            Reader - Strings from the reader's Search & Go To requesters.
            Misc - Strings entered into all other DiskMaster2 requesters (Select
                   and Comment, for example)
          Only the first letter is necessary; "P", "R", or "M" may be
          used to save typing.
          Default:  Path.


@{b}Examples:@{ub}
GetHistory
  The path history is copied to the ARexx variable LIST.
  LIST.COUNT holds the number of items in LIST.

GetHistory VAR=mischist HISTORY=MISC
  MISCHIST and MISCHIST.COUNT hold the miscellaneous string history

GetHistory HISTORY=R
  The reader's history is copied to LIST.
@endnode

@node "GInfo" "Some notes on the functions described"
@REMARK .7
@{b}------------------------------------------------------------------------------
                              General Information
------------------------------------------------------------------------------@{ub}

- Pressing RMB activates the underlying window.

- With OS4 using the mouse-wheel activates the underlying window and
  starts scrolling the contents of that window.

- When pressing an alpha-numeric key for which no keyboard-command is defined
  the lister will jump to the first file which name begins with the
  character representing that key.

- All DiskMaster2 functions can be issued through ARexx.
  (Arexx only functions are marked)
  This is why there is so less documentation in here for ARexx...

- There is virtually no limitation in the length of commands.
  Almost everything uses pooled memory now.

- The maximum amount of arguments for a function is 59.

- Due to restrictions in the function parser, all function names
  could be safely abbreviated down to five characters.
  E.g. "Extern" could be abbreviated as "Exter".

- A special link to the @{"flags" link "flags" 0} being offered.

- Flags are recognized and expanded even when surrounded by other text.
    T:%n.tmp will expand to T:<selected file's name>.tmp
    Choose TEXT="Pick a dir:" BUTTONS=Sys:|Ram:|%p|%d

- The caret, "^", may be used to insert flags inside quoted text.
    MSG "The destination path is ^%d."
    MSG "You selected file ^%n in directory ^%p."

- The paths returned by %d and %p always end with either ":" or "/".

- The backslash, "\", cancels any special feature the next character may have.
  "\n" is a special case; it is interpreted as a linefeed (ASCII 10).
    \" = "
    \% = %
    \^ = ^
    \\ = \
    \n = LF (ASCII 10)
    MSG "Some \"quotes\" and a \\ inside quoted text!"

- You are encouraged to use equal signs between a keyword and its data.
    Choose TEXT="Hi there!" BUTTONS="Hi!|Go away!"
    DirList VAR=sdir FILE SEL
    Pack %s TO=T:%n SUFFIX KEEPORIG

- Single quotes, "'", are no longer recognized as beginning/ending quoted text.
    Choose TEXT='Hi there!' - Incorrect.
    Choose TEXT="Hi there!" - Correct.
    Choose "TEXT=Hi there!" - Correct, although a little odd-looking. :-)
    Choose TEXT "Hi there!" - Still supported for compatibility, but its use
                              is discouraged.

- Selecting a dir with the left-mouse-button and then pressing the right-mouse-button
  causes DiskMaster2 to open a new dir-window with the path of the selected dir.

- Selecting a dir in one dir-window and then left-mouse-clicking in another dir-window
  within the double-click time causes DiskMaster2 to load the content of the selected
  dir into the second dir-window.

- You can only double-click entries that are not selected.

- Try to press SHIFT while selecting entries...

In the functions below, arguments enclosed in "< >" are required,
while those enclosed in "[ ]" are optional.

My very own comments are marked with "*".
@endnode
@node "GUI" "GUI"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                    GUI
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Blocks user-input.

@{b}Syntax:@{ub} GUI [arg]

@{b}Examples:@{ub}

 GUI meaningless-arg-as-key

The graphical user-interface is blocked.

 GUI

The GUI accepts input again.
@endnode
@node "HideDev" "HideDev"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                  HideDev
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Filter the device list to exclude certain names.

@{b}Syntax:@{ub} HideDevList [ADD] [<names> ...]

@{b}Arguments:@{ub}

@{b}ADD@{ub}:  Each time HideDev is called the list of names to hide is reset.
      ADD allows the list to remain intact, with new names appended to it.

@{b}<names>@{ub}:  The devices, volumes or assigns you wish to filter from
          the device list.  Up to 100 names may be hidden.

HideDev with no arguments will reset the device list to show all items.


@{b}Examples@{ub}:

 HideDev HELP: PRINTERS: Keymaps:

The assigns "HELP:" "PRINTERS:" and "KEYMAPS:" are no longer present in
the device list.

 HideDev PC0: DF1: JPGTEMP:

DiskMaster2's device list no longer displays "PC0:", "DF1:", and "JPGTEMP:".

 HideDev ADD civ2: Civ3: CIV4:

"PC0:", "DF1:", "JPGTEMP:", "CIV2:", "CIV3:", and "CIV4:" are hidden from
view (remember "ADD" prevents the to-hide list from being reset).

 HideDev

Nothing is hidden.
@endnode
@node "Home" "Where in the world is DiskMaster2..."
@REMARK .6
@{b}------------------------------------------------------------------------------
	                    Here you find DiskMaster2:
------------------------------------------------------------------------------@{ub}

Aminet/util/dir  - The actual and complete distribution

comp.sys.amiga.binary  - I gave permission to release DiskMaster2 in this group.
			
http://home.t-online.de/home/rudolph-riedel

 - Gone by now due to changes at my ISP.

http://dm2.privat.t-online.de

 - To be removed soon, I had to get a new account for broadband access
   and still have two accounts of which I only use the newer one.

http://kazong.privat.t-online.de

 - Online since august 2004
 - Always has the newest versions of DiskMaster2 and this guide.
@endnode

@node "HostScreen" "HostScreen"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                HostScreen
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Use a public screen as host.

@{b}Syntax:@{ub} HostScreen [name]

@{b}Arguments:@{ub}

@{b}name:@{ub} The name of a public screen.

@{b}Example:@{ub}

 HostScreen BAUD

All windows after this will open on the BaudBandit screen.
@endnode
@node "Hynek" "Teamwork on the run..."
@REMARK .2
@{b}-------------------------------------------------------------------------------
                                   Co-Author
-------------------------------------------------------------------------------@{ub}

As I've been a co-author like Richard I gonna recycle his style:


   Name: Hynek Schlawack
   Aka:  hys, hynek@#amigager
   Born: March, 25th 1980, in Prague/Czech Republic
   Home: Berlin/Germany

Computer History:
~~~~~~~~~~~~~~~~~
  I got a Amiga quiet late, it was 1993 and it was an poor Amiga 500.
I played around with AmigaBASIC, AMOS Pro and MaxonPASCAL and I even
released one program:  HSKonvert, it was even on the cover disk of
the AmigaPlus and I've got some registrations :).  Later I landed at
C and I deeply believe, that it is the only true programming
language.

Recent System:
~~~~~~~~~~~~~~
  Amiga 1200TE, OS 3.5
  2 MB Chip / 32 MB Fast
  Maxtor 4.3 GB HD
  Funai 16x CD-ROM drive
  Blizzard 1240T/ERC
  USR Sportster V.90 FLASH

Real Life:
~~~~~~~~~~
  I'm a student of computer sciences on the University of Potsdam.

Hobbies:
~~~~~~~~
  My girlfriend and computers (as you might have guessed :)).


Contact:
~~~~~~~~
  e-mail:   mailto:hynek@schlawack.net
  homepage: http://www.schlawack.net/


                  Dedicated to my beloved Monika.
@endnode
@node "Icon" "Icon"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                   Icon
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Creates a default icon for a given @{"file" link "file" 0}.

@{b}Syntax:@{ub} Icon

@{b}Arguments:@{ub} None

@{b}Examples:@{ub}

 Icon @{"%s" link "flags" 0}

 AddCmd Icon,20,Icon %s

@endnode
@node "Iconify" "Iconify"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                  Iconify
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Sends DiskMaster2 to suspend-mode.
          All windows and the screen are closed and a little app-icon
          is placed on the WB.
          To wake up DiskMaster2 just double-click on this icon.
          You can even iconify DiskMaster2 with ARexx.

          When iconified DiskMaster2 only recognizes two ARexx-commands:

          'Quit' - does just this
          'Wake' - DiskMaster2 wakes up on this


@{b}Syntax:@{ub} Iconify

@{b}Examples:@{ub}

 AddCmd Iconify, 30,Iconify

Adds a command "Iconify" to your command-window that when pressed
will send DiskMaster2 to sleep.

 rx "address DM.1;quit"

To be issued from a shell or may also be content of
an ARexx-script this will quit DiskMaster2 when it`s sleeping.

 rx "address DM.1;wake"

To be issued from a shell or in a script this will
wake up DiskMaster2 when it`s sleeping.
You may configure a hotkey in ToolManager with this line for example.
@endnode

@node "Info" "Info"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                   Info
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Pops up Information requester to edit tooltypes of a given @{"file" link "file" 0}.

@{b}Syntax:@{ub} Info [@{"file" link "file" 0}] [ASYNC]

@{b}Arguments:@{ub}

@{b}ASYNC:@{ub} Info will run in a separate process, and not block input to DiskMaster2.

@{b}Examples:@{ub}

 Info @{"%s" link "flags" 0}

 AddCmd Info,20,Info %s

Installs a command to open the WB information requester for the currently selected file.

 AddCmd Info,20,Single;Info %s ASYNC

Installs a command that opens the WB information requester for the currently selected
file and returns control to DiskMaster2 itself.
Note that without @{"Single" link "Single" 0} WB information requesters are
opened for all selected files.

@{b}Flaws:@{ub}

If a file has no Icon, WB loads "ENV:sys/def_project.info" instead.
You may edit the file`s attributes then but you can`t save the icon.
Use @{"Icon" link "Icon" 0} if you need to create a default-icon for a file.
@endnode

@node "Install" "Really no joke..."
@REMARK .6
@{b}-------------------------------------------------------------------------------
                         How to install DiskMaster2
-------------------------------------------------------------------------------@{ub}

This is one of the simplest things on earth, so I won`t spend any time on
writing a special installer script.

1. Copy DiskMaster2, DiskMaster2.info and DiskMaster.guide to your favourite
   "Tools" directory using the Workbench or DiskMaster2 itself.
2. Optionally copy the ARexx scripts from DiskMaster2/rexx to Sys:Rexx.

That`s it!

Additional steps:

1. Start DiskMaster2 and select "Save Config" from the "Project" menu.
2. *READ* this guide and use @{"DMPrefs" link "DMPrefs" 0}
   and a text-editor to customize your DiskMaster2.prefs.
   The file "MyDiskMaster2.prefs" may give you additional ideas
   as well as the @{"upgrade" link "upgrade" 0} chapter
3. Copy the appropriate DiskMaster2.catalog to Sys:Locale/catalogs/<your language>
   or to the same dir you have copied DiskMaster2 to.
@endnode
@node "Intro" "What`s that all about?"
@REMARK .3
@{b}-------------------------------------------------------------------------------
            What the heck is DiskMaster2 and why does this Guide exist?
-------------------------------------------------------------------------------@{ub}

DiskMaster2 is simply one of the very best directory-utilities ever!

DiskMaster2 is small, fast and compatible, easy to use, easy to configure.
And among the best things it comes for free now!

You simply have to try out DiskMaster2 to become one of it`s fans!


I came across DiskMaster2 early 1993, as far as I can remember.
To be honest, someone gave me a copy of this program that
I tried out on my A500 with 1MB and Kick 1.3 .
Half a year later I really was into it and >honest< from then
I tried to buy the program but there was nobody selling it.
We even tried to phone Progressive, this was back in 1994 or so.

In late 1994 I got hold of a copy of DiskMaster 2.1c,
again from an unknown source - no way to track it down.

In late 1995 I bought my modem - That finally opened the door.
As soon I had a connect to the german z-netz, I started writing adverts.
But again no-one was willing or able to sell an original.

It was in October 1996 when I finally made it to the internet.
On November 13. I put my first advert in COMP.SYS.AMIGA.MARKETPLACE .
And the 16.11.1996 became the day, I was waiting for so long.
Jerry W. Rubemeyer from Iowa offered me his DiskMaster 2.0
together with the manual I ever needed so badly (100 pages).
Thanks again, Jerry!

On December the 10th, 1996 I put my first offer to swap Startup.DMs on the net.

The reactions on this convinced me that I am
on the right way still supporting this splendid dir-util.
And as it looks like a lot of users received DiskMaster2 from the Cover-Disk
or from dubious sources like myself, I decided to write this guide to help all
these fellows out there that were not so happy to get hold of the original manual.

Additionally the manual is rather brief on some issues and I received a lot
of examples that I can provide to demonstrate the power of DiskMaster2.

To my shame I basically copied the manual so far adding only few comments.
But I also provided some not mentioned functions.
The reason for this is that I wanted to have a solid basis first
to which I may attach new ideas easier.

And now that I received the source-code for DiskMaster2, this is no longer a
stand-alone product but the official documentation for DiskMaster2.

I spent and will spend a lot of work on this, so appreciate it! :-)
@endnode

@node "Keyboard" "Hackin` da keyz..."
@REMARK .3
@{b}------------------------------------------------------------------------------
                These keys are already in use by DM2:
------------------------------------------------------------------------------@{ub}

Escape - use it to cancel operations.

Tab    - just ignored so far.

Cursor up/down/left/right - use them for scrolling the windows.

Numeric Keypad up/down/left/right/Home/End/Page Up/Page Down - as above.

SHIFT (left/right) - used for group-selection

Help   - Within certain requesters, such as the Add...Commands, DMPrefs, and
         Read, pressing the Help key will open the DiskMaster2 guide to the
         page describing these commands.
         The location of the DiskMaster2 guide may be set using @{"SetX" link "SetX" 0} Guide
         or @{"DMPrefs" link "DMPrefs" 0}.
@endnode
@node "Last" "Last"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                  Last				      (v2.5b4)
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Opens a requester to display the last message that
          has been shown in the title-bar.

@{b}Format:@{ub} Last

@{b}Arguments:@{ub} none

This command is not affected by @{"Quiet" link "Quiet" 0}.
You will able to display the last message even if it hadn`t
been displayed.

@endnode
@node "Lock" "Lock"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                 Lock
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Locks a window as either a source or destination window.
          This function allows for the use of multiple source
           and/or destination windows.

@{b}Syntax:@{ub} Lock [S|D]

@{b}Arguments:@{ub}

@{b}S:@{ub} Locks window as source window.

@{b}D:@{ub} Locks window as destination window.

@{b}Examples:@{ub}

 Lock S

Locks last selected window as a SOURCE window.

 Lock D

Locks last selected window as a DESTINATION window.

@endnode
@node "mailing" "Discuss your problems with friends..."
@REMARK .5
@{b}------------------------------------------------------------------------------
                         DiskMaster2 Mailing-list:
------------------------------------------------------------------------------@{ub}

To join the @{b}dm2-forum@{ub} just send a mail to:

Address: DM2-Forum-subscribe@yahoogroups.com
Header : -
Body   : -

Or have a look at the web-page:

http://groups.yahoo.com/group/DM2-Forum


Install a folder in your mailing-software and filter
out the mails from the list by scanning for:

@{b}Sender: DM2-Forum@yahoogroups.com@{ub}
@endnode
@node "MakeDir" "MakeDir"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                 MakeDir
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Creates a new directory.

@{b}Syntax:@{ub} MakeDir [name] [ICON]

@{b}Arguments:@{ub}

@{b}(no arg):@{ub} Opens a string requester.

@{b}name:@{ub} The name to be given to the new directory.

@{b}ICON:@{ub} With this switch you tell DiskMaster2 to always create
      a default icon for the new directory.
      This has to be the last option.

@{b}Examples:@{ub}

 MakeDir

Opens a requester asking for the name of the new directory.

 MakeDir RAM:T

Makes a directory in RAM: called "T".

 MakeDir ICON

Won't create the dir "ICON" in the current directory but opens the
requester asking for the name of the directory to create.

 MakeDir ICON ram:xx

Just opens a requester asking for the name of the new directory.
"ram:xx" after "ICON" is ignored.
@endnode
@node "Move" "Move"
@REMARK .3
@{b}------------------------------------------------------------------------------
                               Move (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Copies the specified file(s) from the source to the
          destination then deletes the specified file(s) from the source.

@{b}Syntax:@{ub} Move <@{"file" link "file" 0}> <@{"dest" link "dest" 0}> [NEWER] @{"[RENAME]" link "xrename" 0} [FORCE] @{"[WARN]" link "xwarn" 0}

@{b}Arguments:@{ub}

@{b}NEWER:@{ub} This flag specifies that only files of like names which
       have a newer file date than the existing files are to be moved.

@{b}RENAME:@{ub} If this flag is set then a requester will open allowing you to
        enter a new name for the file.  @{"More info" link "xrename" 0}.

@{b}FORCE:@{ub} If this flag is set an existing destination file of the same name
       as the source-file is de-protected first.
       This flag has a lower priority than NEWER.

@{b}WARN:@{ub} If this flag is set and a file of the same name exists in the
      destination directory then a requester will appear asking for confirmation
      before overwriting the destination file.  @{"More info" link "xwarn" 0}.

@{b}Examples:@{ub}

 Move @{"%s" link "flags" 0} @{"%d" link "flags" 0}

Moves selected files from the source window to the destination window.

 Move @{"%s" link "flags" 0} RAM:

Moves selected files from the source window to the RAM: directory.

 Move @{"%s" link "flags" 0}

Requests the destination directory, then moves selected files
from the source window to that destination.

@endnode
@node "Msg" "Msg"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                  Msg
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Displays text in the DiskMaster2 screen title bar.

@{b}Syntax:@{ub} Msg "text"

@{b}Arguments:@{ub}

@{b}text:@{ub} Any text which is to be displayed in the DiskMaster2 screen title bar.

@{b}Example:@{ub}

 Msg "Do something!"

Displays the message "Do something!" in the DiskMaster2 screen title bar.
@endnode
@node "NewDir" "NewDir"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                  NewDir
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Changes the directory path of the source window.

@{b}Syntax:@{ub} NewDir [path|dmfile]

@{b}Arguments:@{ub}

@{b}path:@{ub} AmigaDOS path name.

@{b}dmfile:@{ub} DiskMaster2 script file to be executed in lieu of reading
        a new directory.

@{b}Examples:@{ub}

 NewDir

Changes the path of the current window to "none" which displays
the device list.

 NewDir RAM:*.info

Changes the path of the current window to RAM: (displays only .info files).

 NewDir %p

Refreshes the current window by selecting the current path as new path.
@endnode
@node "NewScreen" "NewScreen"
@REMARK .6
@{b}------------------------------------------------------------------------------
                                NewScreen
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Opens a new screen for DiskMaster2.

@{b}Syntax:@{ub} NewScreen [ID=value|D=value|H=value|W=value|F=fontname|FS=value]

@{b}Arguments:@{ub}

@{b}(no arg):@{ub} Will bring up a screenmode-requester.

@{b}ID=value:@{ub} The mode-id of the screen, you want DiskMaster2 to open.
          If invalid the one from the WB is used instead.

@{b}D=value:@{ub} The number of bitplanes to use for the custom screen.
         Minimum number is two planes.

@{b}H=value:@{ub} The height in pixels to use for the custom screen.

@{b}W=value:@{ub} The width in pixels to use for the custom screen.

@{b}F=fontname:@{ub} The name of a font to use for the screen.  This font will be used
            for the screen and window titlebars, and will also be the default
            font for requesters and menus.  If no name is given ("FS=") DiskMaster2
            will open a font requester.

@{b}FS=value:@{ub} The size of the font specified with the "F" option.


@{b}Notes:@{ub}
- All values are decimal.
- Use utilities like aminet/util/misc/gmi22_usr.lha to obtain the right
  mode-id for your prefered screenmode.
- ...Or simply use @{"SaveConfig" link "SaveConfig" 0} to obtain the perfect
  command-line for your screen.
- The default values for NewScreen's arguments are taken from the default
  public screen.
- When you cancel the screenmode-requester DiskMaster2 will open it's windows
  on default pub-screen instead.


@{b}Examples:@{ub}

 NewScreen

A screenmode-requester will open from which you may select your prefered mode,
only works when starting DiskMaster2 so far.

 NewScreen ID=167936

DiskMaster2 will open a PAL/Highres screen with the depth/height/width of your WB.

 NewScreen D=2

DiskMaster2 will clone your WB except from the number of bitplanes that is set to 2.

 NewScreen H=10 W=10

DiskMaster2 will open a screen with the mode and depth of your wb
and a size of 320 * 200.

 NewScreen D=4 F=XCourier FS=13

DiskMaster2 will open a screen with the same mode and dimensions as your WB,
16 colors (4 bitplanes), and use 13 point XCourier.font as its font.
@endnode
@node "Nils" "khao müüang dtaa liu dtong liu dtaa dtaam..."
@REMARK .1
@{b}-------------------------------------------------------------------------------
  ARexx-scripts, betatester, german translation, co-author for asm-routines
-------------------------------------------------------------------------------@{ub}

   Name: Nils Görs
    Aka: ./.
   Born: Early 70s in Wuppertal/Germany
   Home: Bergisches Land
 groups: ./.


current system:

  Amiga 3000 T(able), OS3.5
  2 MB Chip / 16 MB Fast
  Merlin-Gfx / 4MB
  1x Quantum Fireball, 3x Quantum LPS
  CD-ROM (manufacturing firm? - I don't know!;)
  Zyxel-Modem


Hobbies:

  my wife, my kids, my work (yes i really love my work!:),
  to play badminton, driving motorbike, to have lunch (i prefer asian-food!)
  travelling.


  e-mail:   nils@goers.line.org
  homepage: http://home.wtal.de/n_goers/
@endnode
@node "OpenScreen" "OpenScreen"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                 OpenScreen
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Opens a custom screen.

* removed in 2.5b7 - use @{"NewScreen" link "NewScreen" 0} now!
@endnode
@node "OpenWindow" "OpenWindow"
@REMARK .5
@{b}------------------------------------------------------------------------------
                                  OpenWindow
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Opens a file display or command window on the current DM2 screen.

@{b}Syntax:@{ub} OpenWindow [LEFT=value] [TOP=value] [WIDTH=value] [HEIGHT=value]
                   [PATH=file|CMD] [ZOOML=value] [ZOOMT=value] [ZOOMW=value]
                   [ZOOMH=value] [ZOOMED] [NODRAG] [NOCLOSE]

@{b}Arguments:@{ub}

@{b}LEFT:@{ub} The pixel coordinate for the left boundary of the window.
      Defaults to 0.

@{b}TOP:@{ub}  The pixel coordinate for the top boundary of the window.
      Defaults to 11.

@{b}WIDTH:@{ub} The width of the window (in pixels).
       Defaults to 100.

@{b}HEIGHT:@{ub} The height of the window (in pixels).
        Defaults to 100.

@{b}PATH:@{ub} The DOS path to be read and displayed in the newly opened window.

@{b}CMD:@{ub} Command Flag.  This flag specifies that the newly opened
     window will take over as the current command window.

@{b}ZOOML:@{ub} The alternate pixel coordinate for the left edge of the window.
       Defaults to [LEFT].

@{b}ZOOMT:@{ub} The alternate pixel coordinate for the top edge of the window.
       Defaults to [TOP].

@{b}ZOOMW:@{ub} The alternate pixel width of the window.
       Defaults to 100.

@{b}ZOOMH:@{ub} The alternate pixel height of the window.
       Defaults to 100.

@{b}ZOOMED:@{ub} This switches the window to alternate dimensions after opening.

@{b}NODRAG:@{ub} This makes the new window undraggable.

@{b}NOCLOSE:@{ub} This makes the window open without closing gadget.


The arguments may be supplied in no particular order.


@{b}Examples:@{ub}

 OpenWindow Left=100 Top=150 Width=200 Height=50 Path=RAM:

Open a new window which will load and display the directory "RAM:".

 OpenWindow Top=150 Left=100 Path="C:s*" Width=200 Height=50

Opens a new window which will display only files which start with
"S" in the C: directory.

 OpenWindow Left=100 Top=150 Width=200 Height=50

Opens a new window which will display the device list.

 OpenWindow Left=100 Top=150 Width=200 Height=50 CMD

Opens a new window which will take over as a new command window.

 OpenWindow Left=100 Width=150 Top=200 Width=50 Path=RAM: zoomed

Opens a new dir-window with the path ram: and immediately switches it to
it's alternative dimensions.

 OpenWindow Left=100 Top=150 Width=200 Height=50 zooml=0 zoomt=11

Opens a new dir-window. When the zoom-gadget is being used the window moves
to x=0 y=11 and shrinks to 100/100 pixels.

 OpenWindow noclose CMD Left=296 Top=11 Width=95 Height=389

Opens a new command-window that has no closing gadget.

 OpenWindow NODRAG Path="DH2:" Top=11 Left=373 Width=297 Height=389

Opens a new dir-window that is not dragable.
@endnode
@node "Pack" "Pack"
@REMARK .5
@{b}------------------------------------------------------------------------------
                             Pack (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Compresses a file using XPK.
*Note:  This function requires xpkmaster.library v4 or above.
*Note:  Pack has been completely rewritten for 2.5b6.  Many differences exist
        between this and the original version.

@{b}Syntax:@{ub} Pack <@{"file" link "file" 0}> [TO @{"<dest>" link "dest"}] [METHOD=packer] [MODE=n]
             [SUFFIX] [KEEPORIG]

@{b}Arguments:@{ub}
@{b}TO@{ub}:  Where to store The new, compressed file.  This may be a path, a full
     path/name, or a DiskMaster2 @{"flag" link "flags"} such as @{"%d" link "flags"}.
     Default:  Same directory/name as the source file.

@{b}METHOD@{ub}:  The 4-letter ID of the XPK packer to use.  Ex: "SHRI".
         Default:  Use the packer defined with Prefs/XPKMaster.

@{b}MODE@{ub}:  Packer efficiency, a number from 0 - 100 (best).
       Default:  100.

@{b}SUFFIX@{ub}:  Append an ".xpk" suffix to the compressed file.
         Default:  No suffix.

@{b}KEEPORIG@{ub}:  The original, uncompressed file is not deleted.  An ".old"
           suffix will be appended if the compressed file has the same name as
           the original.
           Default:  The original file is deleted if Pack succeeds.

@{b}Examples:@{ub}
Pack @{"%s" link "flags" 0}
  The selected file is packed, overwriting the original file.

Pack @{"%s" link "flags" 0} TO @{"%d" link "flags"} SUFFIX KEEPORIG
  The selected file is packed and saved to the @{"%d" link "flags"} directory.   The crunched
file has the same name as the original, but with an ".xpk" appended.  The
original file is not deleted.

Pack @{"%s" link "flags" 0} METHOD=SHRI MODE=100 SUFFIX
  The selected file is packed using the Shrink (SHRI) packer at best
efficiency (100), and ".xpk" is appended to the file name.  Once compressed,
the original file is deleted.
@endnode
@node "Parent" "Parent"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                  Parent
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Displays the contents of the parent directory in the
          current directory path of the source window.

@{b}Syntax:@{ub} Parent

@{b}Arguments:@{ub} None

@endnode
@node "Past" "All the tortures listed below..."
@REMARK .2
@{b}------------------------------------------------------------------------------
                 What happened to the binary so far:
------------------------------------------------------------------------------@{ub}

2.6 (2005-12-11) 103072 Bytes

This is the most complete update ever, there were changes in all
modules since 2.5.32, some more prominent than others.
So please read the release-notes carefully, although this is only
a shortened list to inform you what changed for you.

- Renamed Startup.DM to DiskMaster2.prefs

Nothing else yet, just a little step for standardisation.
Just rename your Startup.DM and you are home again.

- Renamed DM2.catalog to DiskMaster2.catalog

As above, just rename your .catalog file or copy over
the one from the archive.

- The requesters use Reaction now

The 68K version of DiskMaster2 requires at least the V41 classes which is
what you find on Aminet in the ClassAct2Demo.lha archive.
The minimum *supported* version of Reaction is V45 however which
is what was distributed with OS3.9.
This should allow to still use the 68K version of
DiskMaster2 on MOS.
And yes, this makes it more difficult to boot DiskMaster2 from
a floppy-disk but then there are still older versions to do just this.

- All new preferences-requester: "AddCmd DMPrefs, 30,03, DMPrefs"

And before the discussion begins, no, this is not what made
DiskMaster2 23K bigger, it's impact is way less than that.
And no, this can not be added as external program, it has to access
data that is not available otherwise and creating an interface to
allow just this won't make the binary significantly smaller.


- Bugfix: A direct 'Delete' as in "Delete ram:xx" caused an Enforcer-Hit
- Bugfix: A 'Find' without arguments caused an Enforcer-Hit.
- Bugfix: 'Rename' may have caused an Enforcer-Hit.
- Bugfix: A check for a dir-window path caused an Enforcer-Hit
          when there were no dir-windows.
- Bugifx: 'Check' caused an Enforcer-Hit when being called without
          arguments and no dir-windows - somewhat esoteric...
- Bugfix: removed a potential buffer-overflow from 'SaveConfig' which
          could occur in case ASL.library was not available.
- Bugfix: 'Read' did not display directly given files in case
          the DEV/VOL/ASN list was displayed for the active window.
          Thanks for reporting to Lorence Lombardo!
- Bugfix: the FORCE-flag was not reset so after deleting with
          this option subsequent moves deleted protected files.
- Bugfix: volumes with InfoData.id_NumBlocks=0 caused a division-by-zero error.
          Found with a "toasted" DVD-RW...
- Bugifx: Using empty lines for 'AddCmd' opens a requester again.
- Bugfix: sorting by extension could be trapped in an endless loop
          for empty directories.
- Bugfix: When starting from the internal startup the default-name
          for the startup was wiped out.
- Bugfix: Saved font names are now enclosed in quotes for 'NewScreen' and 'Font'.
          Thanks for reporting to Javier de las Rivas <javierdlr@jazzfree.com>!
- Bugfix: 'SetList' was badly broken for OS4 since 2.5.31
- Bugfix: using 'Sort' with no window opened issued an enforcer-hit since 2.5b7.
          Thanks for reporting to Javier de las Rivas!
- Bugfix: Due to a typo the OS4 version displayed negative values
          in the window-title for dirs with 2gig+ of files.
          Thanks for reporting to Javier de las Rivas!
- Bugfix: When opening a new command-window without actually adding a command to
          it, it was converted to a dir-window - remained undetected since 2.1c at least...
          Thanks for reporting to Javier de las Rivas!
- Bugfix: Arranging the windows' positions went unnoticed unless the window in question
          also had been resized -> the wrong position was saved in this case.
- Bugfix: Jumping from one screen to annother is now possible.
- Bugfix: Screen-promotion does not mess-up window-scaling anymore.
- Bugfix: The "COMMENT" option for 'Select', introduced with 2.5b13,
          fed MatchPatternNoCase() with NULL-strings for empty comments.
- Bugfix: Parser - "\" (escape char) handling was broken.

- Changed the format of the $VER string to fully comply with
  the specifications for AmigaOS.
- Broken soft-links are now displayed as files with a size of zero
  and a comment that this is a broken link.
- Rewrote 'Archive' to generate longer argument strings.
  In addition using "#" for the name argument suppresses the target-requester thus
  making 'Archive' better suitable for generic multi-select actions.
- Most requesters feature a context-help now accessible thru a button
  or by just pressing the HELP key which opens DiskMaster2.guide from
  progdir or what is configured thru 'SetX' "Guide".
  Note that some commands do not feature a dedicated requester and use
  'Confirm' or 'ReqPattern' instead.
- "ASNYC" option for 'View' and 'Info'.
- 'SetX' - new "LongCmd", "WheelMult", "DragDelay", "ReqHideHelp" and "Guide" options.
- Rewrote 'Delete' to let it handle links better and to speed it up somewhat.
- Implemented a new sortmode: sort by name-length -> L/L-
- The minimum window width and height are now calculated based on the sizes of the borders
  and the sizes of the gadgets. The defaults for the commands have been raised to 100.
- 'FileStat' - Returns file time (<stem>.TIME = "HH:MM:SS").
- 'Dirlist' - TIME option (<stem>.TIME.<idx> = "HH:MM:SS").
- 'Color' can use 24 bit values now and has a new "Offset" option.
- Added "CmdReq" command.  Opens a req, and executes the input as a DM command.
- Added support for OS4 mouse-wheel events - with configurable multiplier of 1 to 5.
- Added SHIFT-qualifier to mouse-wheel scrolling on OS4 to allow
  scrolling sideways with a standard 1-wheel mouse.
- Added sort-by-length and 'DMPrefs' entries to the internal startup.
- Changed the internal startup to use "#" chars as indicator for empty
  command-lines.
- Replaced hardcoded "G" and "T" with msgUnitGigB and msgUnitTerB.
- Improved the up/down/left(right scrolling delay by actually reading the
  system-prefs and using KeyRptSpeed and KeyRptDelay.
- Replaced a WaitTOF() call in drag-selection with a conditional delay configurable
  thru 'Setx' to 3...9 milli-seconds.
  So if drag-selecting the next entry takes less than e.g. 5 milli-seconds
  the further execution is delayed by the difference.
  Helps with fast machines, should not affect slow machines too much.
- In preparation for the support of proportional fonts in the directory
  listviews a large portion of the display code has been rewritten.
  The code already is more complicated but should not work significantly
  slower than before - but the final step to prop-fonts will make
  things a little slower.
- 'Read' - new "TabSize" option.
- Removed ReqTools code. 'Color', without any args, opens the "Colors"
  page of 'DMPrefs'.
- DM flag %R always returns not quoted text as suggested
  by Javier de las Rivas.


Earlier releasenotes are stored in a separate file in the
main archive: @{"History" LINK "history.old/MAIN"}
@endnode
@node "pattern" "Pattern"
@REMARK .1
@{b}------------------------------------------------------------------------------
                            The "Pattern" Keyword
------------------------------------------------------------------------------@{ub}

@{b}pattern:@{ub} Any printable text may be used as the pattern to be matched.
         The wild card characters "?" (single unknown) and "*" (multiple
         unknown) may also be used.

@endnode
@node "Pens" "Pens"
@REMARK .8
@{b}------------------------------------------------------------------------------
                                  Pens
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Allows you to customize which color register is used
          for each AmigaDOS pen.

@{b}Syntax:@{ub} Pens [color]

@{b}Arguments:@{ub}

@{b}color:@{ub} This is the DiskMaster2 palette register number to be used
       for the specific AmigaDOS pen.
       The number of registers available is depending on the number
       of bitplanes being used for the screen.

       This command has to be called before @{"NewScreen" link "NewScreen" 0}
       as there is no (legal) way to feed intuition with
       this information other than to open a new screen with it...
       At best, this command is called right after @{"Reset" link "Reset" 0}.

       Due to a limit in the function parser it is not possible
       to enter more than 59 custom-colors.
       In consequence this command won't accept parameters
       beyond 59 (0...59).
       All higher values are set to zero.

       Some of the pens are already in use by the system.
       Pens 17-19 are normally the pointer pens (if not, tell me!).
       And the pen for the cursor-color is the complement of the
       [Background Pen].

       When you don't have this command in your DiskMaster2.prefs or
       do not provide all possible pens the WB settings are cloned
       which may be a little inaccurate, especially when the WB-screen
       uses more or less bitplanes than your DiskMaster2 screen.

       This command resets BPen (@{"SetX" link "SetX" 0}) to "Background Pen".

       The position of the color numbers specifies which AmigaDOS
       pen will be assigned that color.  The positions are as follows:

        0 = Detail Pen
        1 = Block Pen
        2 = Text Pen
        3 = Shine Pen
        4 = Shadow Pen
        5 = HighFill Pen
        6 = HighFill Text Pen
        7 = Background Pen
        8 = Highlight Text Pen
        9 = Bar Detail Pen
       10 = Bar Block Pen
       11 = Bar Trim Pen - Only of use in V39 and up systems.

       Note: Refer to your AmigaDOS manual for a description of the
       purpose of each of these pen attributes.
       And as stated in the feature-list for OS4 there are more pens
       to be set with OS4.
       These are already supported but I can't name them yet...

@{b}Example:@{ub}

 Pens 0 1 1 2 1 3 1 0 3 1 2 1

Assigns color registers 0-3 to AmigaDOS pens, as specified by
their position.

 Pens 10 11 12 23 7 6 0 1 9 25 16 13

Assigns a unique color-register to every AmigaDOS pen.
@endnode
@node "Play" "Play"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                  Play
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Play a music module.

* removed in 2.2b2 - use @{"View" link "View" 0} now.

@endnode
@node "Print" "Print"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                  Print
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Prints specified file(s) (text or picture).

* removed in 2.5b5.
@endnode
@node "PrintDir" "PrintDir"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                  PrintDir
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Prints selected files/dirs in source window using current format.

@{b}Syntax:@{ub} PrintDir @{"file" link "file" 0} output

@{b}Arguments:@{ub}

@{b}output:@{ub} The logical device the text shall be passed to.
        When this argument is left-out a file-requester will open.

@{b}Examples:@{ub}

 PrintDir @{"%s" link "flags" 0} PRT:

Prints a list of all selected files using the printer.

 PrintDir @{"%s" link "flags" 0} RAM:x

Generates a file ram:x that contains the list of selected files.

 PrintDir @{"%s" link "flags" 0}

Opens a file-requester asking for a path/name to save the
list of selected files to.
@endnode
@node "Priority" "Priority"
@REMARK .4
@{b}------------------------------------------------------------------------------
                                 Priority
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Change the current AmigaDOS priority of DiskMaster2.

* removed in 2.5b10.
@endnode
@node "Protect" "Protect"
@REMARK .1
@{b}------------------------------------------------------------------------------
                              Protect (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Changes protection/attribute bits on specified file(s).

@{b}Syntax:@{ub} Protect <@{"file" link "file" 0}> ["[+] [-] [hsparwed] [G]"]

@{b}Arguments:@{ub}

@{b}+:@{ub} Specifies that the following bits are to be turned ON.

@{b}-:@{ub} Specifies that the following bits are to be turned OFF.

@{b}hsparwed:@{ub} Optional list of bits to be turned ON or OFF when
          preceded by a plus (+) sign or minus (-) sign.
          If the plus or minus signs are NOT used,
          the list will specify the absolute bit settings.
          The bits have the following meanings:

          H - Indicates that the file should be Hidden.

          * Of course NOT!
            From OS2 to 3.0 "H" was the "Hold"-Bit,
            used by the OS to automatically make "pure" commands resident.
            The support for "Hold" was removed in OS3.1 .
            Please make no use of it.

          S - Indicates that the file is an AmigaDOS Script.
          P - Indicates that the file is Pure and can be made Resident.
          A - Archive Bit; used by hard disk backup programs to indicate
              whether or not the file has been backed up.  This bit is
              automatically reset to OFF if any other tool has written to
              the file.
          R - Indicates that the file may be Read.
          W - Indicates that the file may be Written to.
          E - Indicates that the file may be Executed.
          D - Indicates that the file may be Deleted.

          Note: If bits to be turned on or off are not specified, a
          requester will appear displaying the current protect bit
          settings, allowing you to edit them.

@{b}G:@{ub} Global flag.
   When this flag is present, the requester will
   not appear for each selected file.
   Instead, the current bit setting are used for all selected file(s).

@{b}Examples:@{ub}

 Protect @{"%s" link "flags" 0}

Opens a requester, asking for protection bits to be edited for
each selected file.

 Protect @{"%s" link "flags" 0} RWED

Sets each file to "----RWED"

 Protect @{"%s" link "flags" 0} "+S-P"

Turns the script bit ON and turns the pure bit OFF on each selected file.

 Protect @{"%s" link "flags" 0} +D

Make all selected files deletable.

@endnode
@node "Questions" "Look here first..."
@REMARK .5
@{b}------------------------------------------------------------------------------
                               Ask Dr.DiskMaster2
------------------------------------------------------------------------------@{ub}

I`ll try to present this like a FAQ, answering to all kind of questions.

Q: My DM2.catalog is not used anymore, I always get English?

A: Yes, with 2.6 these have been renamed to DiskMaster2.prefs.

Q: Is there a "Delete *.info" command?

A: Use "Select *.Info;Delete %s"

Q: If you have a program such as Cybershow that can show multiple files
   like this: "cybershow <options> file1 file2 file3 file4"
   How may I use this with DiskMaster2?

A: @{"Archive" link "Archive" 0} can do this.
   And there is FastDMview.rexx which is tailor-made for this purpose.

Q: Is there an opposite to @{"SetFormat" link "SetFormat" 0}, maybe "GetFormat"?

A: There is, use "@{"Status" link "Status" 0} F".

Q: Is there a way to let DiskMaster2 open it`s windows on WB?

A: Just leave out the @{"NewScreen" link "NewScreen" 0} command-line.
   Or when starting for the first time, just cancel the screenmode-requester.

Q: Is there a way to have buffered directory-windows?

A: There is, open a new window, adjust it to the required path and
   to minimal size, then throw it in the background.
   All paths from opened windows will be checked periodically.
   I just remembered that I used this technique with my old A500
   and it`s slow disk-drives.

Q: I like to start a script/launch some tools/execute an ARexx script
   when starting or quitting DiskMaster2, is there a way?

A: The answer is: DiskMaster2.prefs !
   DiskMaster2.prefs is a batch-file that is interpreted line by line when DiskMaster2 starts.
   So you may add any commands you like to it:

   ;DiskMaster 2.6

   Extern execute s:myDMstartscript
   Rexx dosomethingonDMstart.rexx
   makedir ram:c
   copy c: ram:c
   Reset

Q: Everytime I start DiskMaster2 it comes up with the screenmode-requester...

A: Well, the @{"Upgrade" link "upgrade" 0} and @{"Install" link "install" 0}
   chapters should give some more hints on how to get started.
@endnode
@node "Quiet" "Quiet"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                  Quiet				      (v2.5b5)
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Suppresses all messages for the current command-line.

@{b}Format:@{ub} Quiet

@{b}Arguments:@{ub} none

@{b}Example:@{ub}

AddCmd QuietCheck, 10, Quiet;UnMark OFF;Check %s

This will perform a @{"Check" link "Check" 0} without displaying
every single filename in the titlebar thus increasing the performance.

*Note well that 'Quiet' affects a whole bunch of commands.
 Delete, Copy, Move, Pack, Unpack ...
 All of these will be performed without displaying a result!
@endnode
@node "Quit" "Quit"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                  Quit
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Exits DiskMaster2.

@{b}Syntax:@{ub} Quit

@{b}Arguments:@{ub} None

* The most useless function... ;^)
@endnode
@node "Read" "Read"
@REMARK .11
@{b}------------------------------------------------------------------------------
                                 Read (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub}  Opens DiskMaster2's built-in file reader to display the selected
          file(s).  The reader will decrunch and display packed files if the
          XFD library is installed.  Multiple reader windows are supported,
          and DiskMaster2 may continue operating while reader windows are open.

@{b}Syntax:@{ub}  Read <@{"file" link "file" 0}> [WINX=num] [WINY=num] [WINW=num] [WINH=num] [WRAP=num]
              [HEX] [FONT=font name] [FSIZE=num] [TABSIZE=num] [PUBSCR=screen name]
              [SEARCH[=pattern]] [WAIT]

@{b}Arguments:@{ub}
@{b}WINX@{ub}:  Sets the reader window's left edge.
       Default:  0.

@{b}WINY@{ub}:  Reader window's top.
       Default:  7.

@{b}WINW@{ub}:  Width of the reader window.
       Default:  Screen width.

@{b}WINH@{ub}:  Reader window's height.
       Default:  Screen height - 7.

@{b}WRAP@{ub}:  Sets the maximum length of a line.  Lines longer than this value
       are split (at the last space whenever possible) into multiple lines.
       Valid values for WRAP are from 25 to 254 (inclusive).
       *Note:  WRAP only affects the ASCII display.  In hex mode, lines are
               always 63 characters long.
       Default:  254.

@{b}HEX@{ub}:  Forces the reader to open in hex mode.
      Default:  The reader automatically determines hex or ASCII mode.

@{b}FONT@{ub}:  Name of the font to use for the reader.  If no name is supplied,
       ("FONT=") a font requester will open.
       *Note:  This must be a fixed-width font.  Proportional fonts will be
               rejected, and Topaz 8 will be used instead.
       Default:  The reader uses DM2's window font, if it isn't proportional,
                 or Topaz 8.

@{b}FSIZE@{ub}:  The size for FONT.
        Default:  The size of DM2's window font.

@{b}TABSIZE@{ub}:  How many spaces in a Tab.  Valid values are 1 to 20.
          Default:  8.

@{b}PUBSCR@{ub}:  Specify a public screen for the reader to open on.
         *Note:  Public screen names are case-sensitive (and are usually all
                 uppercase).
         Default:  The reader opens on the current DiskMaster2 screen.

@{b}SEARCH@{ub}:  Performs a search on every selected file.  If SEARCH is specified
         by itself a requester will appear, prompting for a search pattern.
         See "Searching", below, for special characters which may be included
         in the pattern.
         *Notes:
           - A reader window will only be opened if the search was successful.
           - Windows opened by SEARCH behave as if the WAIT argument (below)
             was also specified.
         Default:  No search is performed.

@{b}WAIT@{ub}:  DM2 will wait for the current reader to be closed (or for the
       "*" keypress; see "Other Keys" below) before continuing.  Useful when
       calling Read with many files selected to prevent being flooded with
       reader windows.
       *Note:  SEARCH (above) implies WAIT.
       Default:  Selected files will be displayed at once; DM2 will be free
                 to continue with other operations.


@{b}Using the Reader:@{ub}
  Once the reader has loaded the file and opened its window, the first page of
text is displayed.  Aside from the system and scrolling gadgets, the reader
also responds to various keypresses.  These are detailed below:

@{b}Scrolling:@{ub}
@{b}Cursor Up@{ub}/@{b}Down@{ub}, @{b}Keypad 8@{ub}/@{b}2@{ub}:
Move the display up or down by one line.

@{b}Cursor Left@{ub}/@{b}Right@{ub}, @{b}Keypad 4@{ub}/@{b}6@{ub}:
Move the display left or right by one column.

@{b}Shift Cursor Up@{ub}/@{b}Down@{ub}, @{b}Shift Keypad 8@{ub}/@{b}2@{ub}, @{b}Keypad 9@{ub}/@{b}3@{ub}, @{b}BackSpace@{ub}/@{b}Space@{ub}:
Move the display up or down by one page.

@{b}Shift Cursor Left@{ub}/@{b}Right@{ub}, @{b}Shift Keypad 4@{ub}/@{b}6@{ub}:
Move the display left or right by one page.

@{b}Control Cursor Up@{ub}/@{b}Down@{ub}, @{b}Control Keypad 8@{ub}/@{b}2@{ub}, @{b}Keypad 7@{ub}/@{b}1@{ub}, @{b}t@{ub}/@{b}b@{ub}:
Move to the beginning or end of the file.

@{b}Control Cursor Left@{ub}/@{b}Right@{ub}, @{b}t Control Keypad 4@{ub}/@{b}6@{ub}:
Move as far left or right as possible.

@{b}Mouse Wheel(s)@{ub}:  With OS 4 the reader also supports vertical and horizontal
scrolling using mouse wheels.  The number of lines scrolled vertically may be
adjusted via the @{b}Wheel Mult@{ub} setting in @{"DMPrefs" link "DMPrefs" 0}.

@{b}Searching:@{ub}
@{b}s@{ub}, @{b}Shift s@{ub}:
  A requester opens, prompting for a pattern to search for.  The search begins
at the current line (@{b}s@{ub}), or the top line (@{b}shift s@{ub}), and continues until a
match is found or the end of the file is reached.  Successful matches will be
highlighted, and the reader will jump to the first line in which the search
pattern occurs.
  Searching is case-insensitive (a=A) by default.  The search pattern may be
up to 80 characters long, and may include the following special characters:
  @{b}?@{ub}          - Match any one character.
  @{b}$@{ub}          - The following characters are treated as a hexadecimal number,
               until a non-hex character is encountered.  Ex:  "$4A", "$100A".
  @{b}~@{ub}          - Toggles case-sensitivity (a<>A) on and off.
  @{b}\\@{ub}          - The character after the \\ is entered into the search pattern
                as-is, regardless of whether or not it usually has a special
                function.  Another use, seen in the last example, is to
                prevent characters from being included in a hex sequence.
      \\?          - "?" (the question mark isn't interpreted as a wildcard).
      \\$          - "$".  Ex:  "\\$AB" = "$AB", not character #171.
      \\~          - "~".
      \\\\          - "\\".
      $474F\\1234  - Pattern is "GO1234" (the \\ stops "1234" from being a
                    part of the hex sequence).

@{b}n@{ub} or @{b}c@{ub}, @{b}p@{ub}, @{b}Shift n@{ub} or @{b}Shift c@{ub}, @{b}Shift p@{ub}:
Find the next or previous occurrence of the search pattern.  @{b}Shift n@{ub}/@{b}p@{ub} first
jumps a page forward/backward, and then searches.
*Note:  If the SEARCH keyword is being used and there are no more matches then
        the file will be closed and searching will resume.

@{b}Copy To Clipboard@{ub}:
@{b}Left Mouse Button@{ub}, @{b}Shift Left Mouse Button@{ub}:
  Mark text to copy to the clipboard.  While the LMB is depressed, moving the
mouse will highlight the text it passes over.  Once the LMB is released the
highlighted text will be copied into the clipboard (unit 0).
@{b}Shift LMB@{ub} activates "box clipping" - dragging the mouse defines a rectangular
block, and only those characters within the block are copied to the clipboard.
  To cancel the copy, move the pointer back to the character originally
clicked on (until the highlight box will disappears) and release the LMB.

@{b}Other Keys:@{ub}
@{b}q@{ub}, @{b}Keypad 0@{ub}, @{b}Esc@{ub}, @{b}Control C@{ub}, @{b}Right Mouse Button@{ub}:
Close the current read-window.  @{b}Esc@{ub} and @{b}Control C@{ub} will also set DiskMaster2's Abort flag.

@{b}h@{ub}, @{b}m@{ub}:
Toggle between hex and ASCII modes.

@{b}g@{ub}, @{b}Shift g@{ub}:
Go to line.  A requester will open, prompting you for the line to jump to.  @{b}g@{ub} ignores line
wrapping; @{b}Shift g@{ub} respects it.

@{b}F1 - F10@{ub}, @{b}Shift F1 - F10@{ub}:
Jump to, or set, a bookmark.  @{b}Shift F-Key@{ub} will store the current top line in
one of the ten bookmark slots.  Pressing the F-Key (without shift) will jump
to the stored line.
*Note:  The ASCII and hex display modes have separate bookmark lists.  So,
        for example, pressing shift-F1 in hex mode will not affect the ASCII
        mode's F1 bookmark.

@{b}Tab@{ub}, @{b}Shift Tab@{ub}:
Cycle forward or backwards between reader windows.  The next (or previous)
window will be activated and brought to the front.

@{b}*@{ub}:
Cancels a WAIT.  The reader window remains open and DM2 is allowed to continue.

@{b}Help@{ub}:
Opens the DiskMaster2.guide to the page you're reading now.
The location of the DiskMaster2 guide may be set using @{"SetX" link "SetX" 0} Guide or @{"DMPrefs" link "DMPrefs" 0}.


@{b}Titlebar Information:@{ub}
  The reader displays the following information in the window's titlebar:
  Filename - This will be shortened to 31 characters if longer.
  First visible line.
  Last visible line.
  Total number of lines.
  Actual line number of the top line (line-wrapping ignored).
  Actual number of lines in the file (line-wrapping ignored).
  First column displayed.
  Last visible column.
  Widest line.


@{b}Examples:@{ub}
Read @{"%s" link "flags" 0}
  Displays the selected file(s).  If multiple files were selected they will be
displayed at once, and DM2 will be free to perform other operations.

Read @{"%s" link "flags" 0} WAIT
  Displays the selected file(s).  If multiple files were selected they will be
displayed one at a time, with a new file being opened only after the current
one is closed or "*" is pressed.

Read @{"%s" link "flags" 0} winx=20 winy=50 winw=640 winh=200
  Reads the selected file(s) using a 640 x 200 window which is 20 pixels from
the left edge of the screen and 50 from the top.

Read @{"%s" link "flags" 0} Hex FONT=cubic FSIZE=8
  Opens the reader in hexadecimal display mode, using the font Cubic 8.

Read @{"%s" link "flags" 0} SEARCH=bubblegum
  Searches the selected file(s) for the string "bubblegum".  Only those files
which contain "bubblegum" (any case) will be displayed.

Read @{"%s" link "flags" 0} SEARCH=~bubblegum
  Searches the selected file(s) for the string "bubblegum" (lowercase only).
Only the files which contain "bubblegum" in lowercase will be displayed.

Read @{"%s" link "flags" 0} wrap=80 SEARCH PUBSCR=WORKBENCH
  The reader opens on the Workbench screen, reading the selected file(s), and
pops up a requester asking for a search pattern.  ASCII lines longer than 80
characters are split.

Read @{"%s" link "flags" 0} SEARCH=G$4f4f\\D\\?
  The reader searches for "GOOD?" ("G", $4F="O", "D", \\? = "?").

Read @{"%s" link "flags" 0} SEARCH=~Te~st
  Searches for the string "Test".  Will only match when "T" is uppercase and
"e" is lowercase, but "s" and "t" may be either case.  "TesT" and "TeST" will
match, but "test" and "TEst" will not.
@endnode
@node "Recursion" "Recursion"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                Recursion
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Enables or disables recursion, allowing for functions
          to be performed on a directory without having it performed on the
          files within that directory.

@{b}Syntax:@{ub} Recursion ON|OFF

@{b}Arguments:@{ub}

@{b}ON:@{ub} Enables recursion.

@{b}OFF:@{ub} Disables recursion.

@{b}Example:@{ub}

 Recursion OFF;Rename @{"%s" link "flags" 0}

This will allow you to rename a directory, and will not attempt
to rename any files within that directory.

@endnode
@node "recursive" "Recursive"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                 Recursive
------------------------------------------------------------------------------@{ub}

Functions marked as "Recursive" will work on all selected files and
all files in selected directories by being invoked until the function
was performed on all of them.

When you have five files selected and perform the @{"Comment" link "Comment" 0} function
on them, then the requester will pop up five times to let you enter the comment
for the selected file in the row.

* The default-setting for "comment" is:

AddCMD Comment, Comment,Recurse OFF;Comment @{"%s" link "flags" 0}

So you won`t be able to set the comments for files within a selected drawer.
Otherwise you are able to set a comment for a selected drawer.

@endnode
@node "removed" "These are gone now..."
@REMARK .4
@{b}------------------------------------------------------------------------------
                      Removed functions since 2.1c:
------------------------------------------------------------------------------@{ub}

Removed in 2.2b2  :
                      @{"    DiskCopy    " link "DiskCopy" 0}
                      @{"     Format     " link "Format" 0}
                      @{"      Play      " link "Play" 0}
Removed in 2.2b3  :
                      @{"  Backpattern   " link "Backpattern" 0}
                      @{"    ShowPic     " link "ShowPic" 0}
Removed in 2.5b5  :
                      @{"      Print     " link "Print" 0}
                      @{"   SetPrinter   " link "SetPrinter" 0}
Removed in 2.5b7  :
                      @{"   OpenScreen   " link "OpenScreen" 0}

Removed in 2.5b10 :
                      @{"    Priority    " link "Priority" 0}
@endnode
@node "Rename" "Rename"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                 Rename
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Renames specified files and/or directories.

@{b}Syntax:@{ub} Rename <@{"file" link "file" 0}> [new]

@{b}Arguments:@{ub}

@{b}new:@{ub} The file's or directory's new name.
     Without this argument, a requester will open asking for the new name.

@{b}Example:@{ub}

 Rename @{"%s" link "flags" 0}

Opens a requester asking for the new name of each selected file.
The requester uses the old name as a default, allowing you to edit it.

@endnode
@node "ReqPattern" "ReqPattern"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                ReqPattern
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub}  Opens a requester asking for a pattern to be matched
           when directories are selected.  A default pattern, and custom
           text in the title bar and gadgets may be included.

@{b}Syntax:@{ub} ReqPattern "text" [@{"pattern" link "pattern" 0}] [Okay Skip Cancel]

@{b}Arguments:@{ub}

@{b}text:@{ub} Text to be displayed in the requester's title bar.
      If the text included spaces, it must be enclosed in quotes.

@{b}Okay Skip Cancel:@{ub} This requester is used for both recursive and
                  nonrecursive operations, and contains three gadgets.
                  The first gadget accepts the pattern and closes the
                  requester, the second gadget skips to the next item
                  and the third cancel the current operation.
                  The text for each of the gadgets can be changed,
                  however their functions will remain the same.

@{b}Example:@{ub}

 ReqPattern "Please enter pattern" *.c

Requests pattern to be used in the current operation with "*.c" as the default.

 AddCmd Copy, 20, ReqPattern;Copy %s %d

Opens a requester asking for a pattern in case you have selected
any directory before.
Providing "~(#?.info)" as pattern would result in copying all files that
do not end with ".info" to the destination drawer.

@endnode
@node "Reset" "Reset"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                 Reset
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Resets DiskMaster2 to a primitive state
          in which it contains no windows or menus.
          By placing this command at the beginning of a script,
          a running DiskMaster2 can be completely re-configured.

@{b}Syntax:@{ub} Reset

@{b}Arguments:@{ub} None
@endnode
@node "REXX" "REXX"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                 REXX
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Executes the specified ARexx program or string.

@{b}Syntax:@{ub} REXX [file|"string"]

@{b}Arguments:@{ub}

@{b}file:@{ub} Name of ARexx program to be executed.

@{b}string:@{ub} ARexx command(s) to be executed.  The ARexx string must
be enclosed in quotes.

@{b}Examples:@{ub}

 REXX "parse arg x,say x" @{"%s" link "flags" 0}

Echoes each selected filename to the console window previously
opened with the "StdIO" command.

 Rexx FastDMView.rexx @{"%p" link "flags" 0}

Executes the Arexx-Script "FastDMView" providing the current path as argument.

@endnode
@node "Root" "Root"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                     Root
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Displays the root directory of the current window path.

@{b}Syntax:@{ub} Root

@{b}Arguments:@{ub} None

@endnode
@node "SaveConfig" "SaveConfig"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                  SaveConfig
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Saves a batch-file that will recreate the current
          environment exactly.
          Since 2.5.24 a version-tag is added to the start of the file like this:
          ";DiskMaster 2.5.24"
          Since 2.6 the configuration file is named "DiskMaster2.prefs".

@{b}Syntax:@{ub} SaveConfig [@{"file" link "file" 0}] [ICON] [WARN]

@{b}Arguments:@{ub}

@{b}(without file):@{ub} Opens an ASL file-requester asking for the name of the file to
                be written or overwritten with the environment information.
                If ASL is not available a simple requester with string-gadget
                is opened instead.
                You have 128 bytes in the string-gadget to enter
                the full path and name.
                The file will be saved with an icon when you press the
                "Icon" gadget in the requester instead of "Continue".

@{b}file:@{ub} Name of file to be written or overwritten with the
      environment information.

@{b}ICON:@{ub} Specifies that an icon is to be provided for the saved file.

@{b}WARN:@{ub} Triggers a warning-requester in case the file already exists.

@{b}Example:@{ub}

 SaveConfig DiskMaster2.prefs ICON

Saves the file as "DiskMaster2.prefs" (with an icon).

 SaveConfig

A requester is asking you for a name of the DiskMaster2.prefs that is to be saved.

 SaveConfig WARN ICON

A requester is asking you for a name of the DiskMaster2.prefs that is to be saved,
a warning-requester opens when this file exists and an icon will be saved, too.
@endnode
@node "ScrBack" "ScrBack"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                 ScrBack
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Pushes the DiskMaster2 screen behind other existing screens.

@{b}Syntax:@{ub} ScrBack

@{b}Arguments:@{ub} None
@endnode
@node "ScrFront" "ScrFront"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                  ScrFront
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Brings the DiskMaster2 screen to the front of other existing screens.

@{b}Syntax:@{ub} ScrFront

@{b}Arguments:@{ub} None
@endnode
@node "Select" "Select"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                  Select
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Selects files and directories in the source window using
          specified pattern(s) based on DOS pattern-matching.
          This function is not case sensitive.

@{b}Syntax:@{ub} Select [@{"pattern" link "pattern" 0}]
               [pattern2] ... [pattern29] [COMMENT]

@{b}Arguments:@{ub}

@{b}COMMENT:@{ub} This is a switch, when provided the comments are compared
         with the patterns.
         All other arguments after this are ignored.

@{b}Examples:@{ub}

 Select

Opens a requester asking for a pattern to match.

 Select #?

Selects all files and directories in the current window.

 Select #?.info

Selects all files and directories in the current window which end with ".info".

 Select #?.info #?.readme #?.nfo #?.diz #?.lha

Selects all files and directories in the current window which end with
".info", ".readme", ".nfo", ".diz" and ".lha".

 Select (#?.info|#?.readme|#?.nfo|#?.diz|#?.lha)

Does the same as the last line but a little bit more elegant and faster.

 Select http://#? COMMENT

Selects all files which comment start with "http://" as it is e.g.
the case with IBrowse web-downloads.

*hint - read your DOS manual to find out more about pattern-matching.
@endnode
@node "SetDate" "SetDate"
@REMARK .2
@{b}------------------------------------------------------------------------------
                             SetDate (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Changes the file date and time of the specified file(s).

@{b}Syntax:@{ub} SetDate [@{"file" link "file" 0}]

@{b}Arguments:@{ub} none

@{b}Example:@{ub}

 SetDate @{"%s" link "flags" 0}

Sets the date of all selected files in the source window to the
current time and date.

@endnode
@node "SetList" "SetList"
@REMARK .2
@{b}------------------------------------------------------------------------------
                               SetList @{b}(ARexx Only)@{ub}
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Displays items in a list in a file display window,
          allowing you to use it as an ARexx item selection window.
          Using @{"DirList" link "dirlist" 0}, the status of this list
          (selected/deselected) is returned to the ARexx program.

@{b}Syntax:@{ub} SetList <stem_name>

@{b}Arguments:@{ub}

@{b}stem_name:@{ub} The stem name of the list (defined in an ARexx program)
           to be displayed.  The list must be defined prior to
           issuing this command and must be in the following format:

           SList.1='One' SList.2='Two' SList.3='Three'

@{b}Example:@{ub}

 SetList SList

Displays the items in "SList" in the current file display window.

*Using this function is not recommended as it is due to be removed.
@endnode
@node "SetPattern" "SetPattern"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                SetPattern
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Sets the pattern for the current operation, overriding
          the pattern specified by "@{"ReqPattern" link "ReqPattern" 0}".

@{b}Syntax:@{ub} SetPattern @{"pattern" link "pattern" 0}

@{b}Example:@{ub}

 SetPattern *.c

Sets pattern for current operation to *.c.

@endnode
@node "SetPrinter" "SetPrinter"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                SetPrinter
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Opens the printer option requester, allowing you to
          change the current printer setup.

* removed in 2.5b5.
@endnode
@node "wish" "You want it?"
@REMARK .20
@{b}------------------------------------------------------------------------------
               What features do you like to see in DiskMaster2?
------------------------------------------------------------------------------@{ub}

If you have any ideas on how DiskMaster2 could be improved,
then send a mail to @{"Jody Tierney" link "SmegHead" 0}!
But please read the guide carefully before.

Last Update:  2005-11-27

Sections:  S01.  ARexx - Existing Commands
           S02.  ARexx - New Commands
           S03.  Commands - Existing
           S04.  Commands - New
           S05.  Dir. Windows
           S06.  Flags
           S07.  Keyboard
           S08.  Menus
           S09.  Misc.
           S10.  Text Viewer.
           S11.  DMPrefs


Abbreviations:
- <name(s)>    - This/these person(s) made this suggestion.
2-<name(s)>    - This/these person(s) also supported this idea.
[<text>  - J.] - My own comments.
[D.Q.]         - A direct quote; it either speaks for itself, or I wasn't sure
                 how to paraphrase it.  :-)
(ID:  ##.##)   - The suggestion's ID number, for voting.
w/             - with.
w/in           - within.
w/o            - without.



S01.  ARexx - Existing Commands
===============================
DirList
  - Arg to select which window is listed; source (default), dest, next, or
   <window ID>
   Ex:  DirList WIN DEST

    -  Jody Tierney <jtierney@cyberlink-inc.com>
    2- Nils Goers <nils@goers.line.org>
    (ID:  01.19)


SetList
  Template:  SetList <stem> [RealDir <path>]
    <stem>  - Var containing data for the dir window.  <stem> should have the
             same structure as DirList's LIST var (eg <stem>.sel.x,
             <stem>.dir.x, etc.)

    RealDir - Treat the window as a valid directory.  <path> is displayed in
             the window's path gadget.

    - Jody Tierney <jtierney@cyberlink-inc.com>
    (ID:  01.17)


Status
  P - Include trailing "/" when appropriate.

    -  Hannu Nevalainen <henk@it.kth.se>
    2- Nils Goers <nils@goers.line.org>
     - Jody Tierney <jtierney@cyberlink-inc.com>
  (ID:  01.20)

  P<ID> - Return path of window # <ID>.
  Ex:  Status P3 ; SAY result -> "Work:Utils/"
  (ID:  01.07)

  S[id] - Return a window's amount of free disk space.  Or all of the
         TitleFormat info. in a _fixed_ format.

         [id] - "S" - Source window.  Default.
                "D" - Destination window.
                <n> - Window ID number.
  (ID:  01.08)

  WL    - Return IDs of open windows.
  Ex:  Status WL ; SAY result -> "1 3 4"
  (ID:  01.09)

  W<ID> - Return window info (x, y, w, h, path) of window #<ID>.  CON: style.
  Ex:  Status W3 ; SAY result -> "10/10/120/120/DH0:WBStartup/"
  (ID:  01.10)

    - Hannu Nevalainen <henk@it.kth.se>

  - Remake Status <character> into Status <Keyword>, & have all easily
   accessible information available for request.

    - Hannu Nevalainen <henk@it.kth.se>
    (ID:  01.12)


  - Return the path/name of the DiskMaster2.prefs currently in use.

    - Hannu Nevalainen <henk@it.kth.se>
    (ID:  01.21)



S02.  ARexx - New Commands
==========================
ARexx
  Purpose:  Run ARexx scripts asynchronously.

  - Hannu Nevalainen <henk@it.kth.se>
  (ID:  02.01)



S03.  Commands - Existing
=========================
AddAutoCmd
  - Hex recognition.

    -  Nils Goers <nils@goers.line.org>
    2- Fabrizio Bartoloni <Lanch@dns.caribusiness.it>
    (ID:  03.01)

  - Shift double-click executes an alternate command.

    - Richard Mattsson <richard@cloudnet.com>
    (ID:  03.65)

  - "Key" field; to allow different actions to be performed on the same Data
    and Pattern fields depending on the key being held down.

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.79)


AddCommand
  - Ability to also specify keyboard shortcuts.

    - Karen Lindsey <ksl@usa.net>
    (ID:  03.02)


AddMenuCommand
  - NOP option.  Similar to Barlabel, only displays non-selectable text instead
   of a separator bar.

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.86)


BarFormat
  - Option to display years as 4 characters or two, "2000" or "00".

    - Bablos <bablos@cableinet.co.uk>
    (ID 03.54)


Button
  - Ability to handle double-clicks or right-clicks.

    - Fredrik Ismyren <myrn@tjohoo.se>
    (ID:  03.62)

  - ...Or handle a qualifier like Shift.

    - Richard Mattsson <richard@cloudnet.com>
    (ID:  03.63)

  - CMD and LIST flags.
    CMD  - Button action for command windows.
    LIST - Button action for lister windows.

    - Gerd Frank <Gerd.Frank@gmx.de>
    (ID:  03.82)


Choose
  - TIMEOUT option - Autoselect the default req. choice w/in a specified period
   of time.

    - Gerd Frank <Gerd.Frank@gmx.de>
    (ID:  03.66)

  - Option to have toggle buttons (like Protect's req.), for multiple chooices.

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.84)


CloseWindow
  Template:  CloseWindow [number] [ALL]
  Purpose:   Option to close all open windows.

  - Hannu Nevalainen <henk@it.kth.se>
  (ID:  03.03)


Comment
  - Ability to use Ram:Clipboards to comment selected files.  Clip2Cmt.rexx?

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.69)

  - Integrate features of CopyCmt.rexx (copy comment from one file to other
    file(s)) and CmtAll.rexx (all selected files receive the same comment )
    into the internal Comment cmd.

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.70)

  - Change req. buttons to "Okay, All, Skip, Cancel".  "All" applies the current
    comment to all selected files.

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.74)

  - A blank entry in the comment req. clears the selected file(s) comment.

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.75)

  - CLIP option - uses text in clipboard for the comment.

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.76)


Copy
  - ASYNC option.

    - Hannu Nevalainen <henk@it.kth.se>
    (ID:  03.05)

  - Check version strings.

    - Kaare Johansen <kaarej@alpha.barentsnett.no>
    (ID:  03.06)

  - Ability to ignore (sub)directories which don't have any files matching a
   supplied pattern.

    - Kaare Johansen <kaarej@alpha.barentsnett.no>
    (ID:  03.51)


Copy & Move
  - Accept a file as a destination.
    Ex:  Copy %s Path/Filename

    - Nils Goers <nils@goers.line.org>
    (ID:  03.44)


Delete
  - Warn if a file is protected; option to delete/overwrite it.

    - Rudolph Riedel <rriedel@amiga.ON-Luebeck.de>
    (ID:  03.09)

Extern
  - End <command>
  Purpose:  Executes <command> on the last selected file.  In the case of
  multiple selected it would not execute the second command, until the last file
  was reached.
  Ex:  Extern view %s END c:iffplayer bell1.snd

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.73)


Find
  - Ability to exclude directories from searches; possibly using a "NoFind"
    comment.

    - Martin Samuelson <sam@oden.se>
    (ID:  03.35)

  - Fixed positions for the "Continue", "Abort", & "Open" gadgets.

    - Martin Samuelson <sam@oden.se>
    (ID:  03.15)


NewDir
  - Always display directory names, even when using the option to filter files
   (ex T:*.jpg).

    - Moses Wildermuth <mosespro@ecity.net>
    (ID:  03.64)


OpenWindow
  - ZOOMH to accept a value of "0", which would minimize a window to just its
   titlebar (and possibly path gadget).

    - Glenn Edward <glenn_edw@email.com>
    (ID:  03.87)

  - NOSIZE option.

    - Javier de las Rivas <javierdlr@jazzfree.com>
    (ID:  03.88)


NewScreen
  - Parameter to set the screen's name.

    - Moses Wildermuth <mosespro@ecity.net>
    (ID:  03.36)

  - Ability to clone an existing screen.
    Ex:  "NewScreen ID=Workbench" will clone the Workbench screen.

    - Nils Goers <nils@goers.line.org>
    (ID:  03.38)


Rename
  - Remove name checking.
    Purpose:  To allow path names such as ":something" and ":a/really/long/path/name/myfile".

    - Hannu Nevalainen <henk@it.kth.se>
    (ID:  03.16)


Root, Parent
  - NOVOL option to prevent the volume/device listing from being displayed when
   "Root" or "Parent" is used on a root dir.

    - Fredrik Ismyren <myrn@tjohoo.se>
    (ID:  03.33)

  - Ability to root other windows.  Ex.  Root RAM:  - Roots all windows
   displaying subdirectories of RAM:.

    - Fredrik Ismyren <myrn@tjohoo.se>
    (ID:  03.34)


Select
  - Ability to select files older/newer than a certain date, or between two
   dates.

    - Fredrik Ismyren <myrn@tjohoo.se>
    (ID:  03.18)

    - Suggested Template:  Select Date [+|-] [<date>]
        +      - All files at or after <date>.
        -      - All files before,but not including, <date>.
               - Defaults to selecting files w/ the exact date.
        <date> - Allow for a 4 digit year.  Pop up a req. if not given.

      - Hannu Nevalainen <henk@it.kth.se>
      (ID:  03.19)

    - Suggested Template:  Something like AmigaDOS's List cmd:
        Select UpTo <date>, Since <date>, Since <date> UpTo <date>, Date <Date>

      - Martin Samuelson <sam@oden.se>
      (ID:  03.20)

  - Ability to select file(s) based on their position.
      Ex:  Select POS 5
           Select POS 1 TO 10

      - Hannu Nevalainen <henk@it.kth.se>
      (ID:  03.48)


SetFormat
  - Rename command to "ListFormat" (keep "SetFormat" name for compatibility).

    - Gerd Frank <Gerd.Frank@gmx.de>
    (ID:  03.80)


TitleFormat
  %D:  Number of dirs in the window.
  (ID:  03.40)

  %G:  Number of directories selected in window.
  (ID:  03.41)


Window
  - Add [prev] and [ID] arguments.
    (ID:  03.23)

    -  Hannu Nevalainen <henk@it.kth.se>
    2- Nils Goers <nils@goers.line.org>
     - David Garcia <davidgarcia_ccs@yahoo.com>


  - Don't ActivateWindow() on a "Window Next".
    (ID:  03.24)

    - Hannu Nevalainen <henk@it.kth.se>


  - Path arg. to accept wildcards.  Ex:  Window SYS:Util#?

    - Fredrik Ismyren <myrn@tjohoo.se>
    (ID:  03.32)


View
  - "SCREEN" &/or "BESTID" options.

    - Jean Marie Boucher <boucher21@caramail.com>
    (ID:  03.57)


- Return BackPattern (ID:  03.25),
         DiskCopy (ID:  03.26),
         Format (ID:  03.27),
         Play (ID:  03.28),
         ShowPic (ID:  03.29).

  - Various.



S04.  Commands - New
=========================
AddClickToWin
  Purpose:  Set action to be performed when a file is selected & then a new
           window is clicked in.

  Examples:AddClickToWin DEFAULT, Copy %s %d
           AddClickToWin ,*.lzx, Extern C:LZX x %s %d
           AddClickToWin ,*.xpk, Extern C:PackX %s TO %d SUFFIX .xpk GUI PUBSCR %a

  - Nils Goers <nils@goers.line.org>
  2- Jody Tierney <jtierney@cyberlink-inc.com>
  (ID:  04.07)


Compare
  Purpose:  Checks two identical drawers if files have changed.

  - Bill Simon <bills@webgate.net>
  (ID:  04.02)


Continue
  Purpose:  The entire command line is executed, even if one of the functions
           fails.
       Ex:  Continue; <function 1>; <function 2>; <function 3>

  - Fredrik Ismyren <myrn@tjohoo.se>
  (ID:  04.12)


History
  Template:  History [NEXT] [PREV] [SHOW]
  Purpose:  To move back & forth through previously visited directories.
            "History SHOW" could open a cmd window with NewDir assignments.

  - Chris <flat.black@erols.com>
    Xavier Messersmith <xcaliber@xav.to>
  (ID:  04.16)


MultiRename
  Purpose:  Change names of all selected files in one go; "*.jpeg" to "*.iff",
           for example.

  - Erik van 't Hof <e.van't.hof@freeler.nl>
  (ID:  04.15)


RequestDevice
  Purpose:  Pops up a device requester, returns the chosen device in %r.

  - Nils Goers <nils@goers.line.org>
  (ID:  04.10)


ReqPos
  Purpose:  To set the default opening position of requesters.

  Examples:  ReqPos X=10 Y=11
        or:  ReqPos=TopLeft
             ReqPos=TopCenter

  - Glenn Edward <glenn_edw@email.com>
  (ID:  04.17)


Update
  Purpose:  Control how often (or if) DM tests dirs for changes.
  Ex:  Update 0  - No updating.
       Update 5  - Update every 5 seconds.

  - Robert Goodlett <goody@eskimo.com>
  (ID:  04.13)


WBExtern
  Purpose:  Execute files as if from Workbench, using the icon's stacksize,
           tooltypes, etc.
  [Aminet:util/libs/WBStart.lha could be helpful.  - J.]

  -  Fredrik Ismyren <myrn@tjohoo.se>
  2- Erik van 't Hof <e.van't.hof@freeler.nl>
  (ID:  04.06)


WinBack [ID]
WinFront [ID]
  (ID:  04.04)
WinMove  [ID] <x> <y>
  (ID:  04.05)

  Window arrangement commands.
  [ID] accepts:  "S" - Source (default).
                 "D" - Destination.
                 <n> - ID number.

  WinMove's <x> & <y> allow for relative positioning.
  Ex:  WinMove 'D' -10 +50

  - Hannu Nevalainen <henk@it.kth.se>
    Nils Goers <nils@goers.line.org>



S05.  Dir. Windows
==================
- If a nonexistent path is entered in the string gadget then try to find the
  last valid directory.
  Ex:  "CD0:Aminet/util/clo/" doesn't exist, so try "CD0:Aminet/util/".

  - Jens Granseuer <jensg@steingym.ham.nw.schule.dey>
  (ID:  05.03)


- Refresh directories as a file's size changes (to see it grow).

  - Karen Lindsey <ksl@usa.net>
  (ID:  05.06)


- Do _NOT_ ActivateWindow() if _all_ DM windows are inactive.  Leave it as a DM
  _internal_ "marking".  [D.Q.]

  - Hannu Nevalainen <henk@it.kth.se>
  (ID:  05.10)


- "S" & "D" markings to be more prominent.  Maybe Src window has one background
  color, another BG for the Dest window, & system defaults for inactive windows.

  - Hannu Nevalainen <henk@it.kth.se>
  (ID:  05.11)


- Double-clicks on selected files to be recognized.

  - Martin Samuelson <sam@oden.se>
  (ID:  05.12)


- Display FFS Hard Links in italics &/or color to spot them.

  - Francis Labrie <fb691875@er.uqam.ca>
  (ID:  05.13)


- Buffered directories.

  - Jody Tierney <jtierney@cyberlink-inc.com>
  (ID:  05.14)


- Multi-threaded windows.

  - Stephen Doogan <steved@lawman.u-net.com>
  (ID:  05.17)


- The scrollbar should not reset to the top when the window is updated.

  - Fredrik Ismyren <myrn@tjohoo.se>
  2- Nils Goers <nils@goers.line.org>
   - Gerd Frank <Gerd.Frank@gmx.de>
   - Glenn Edward <glenn_edw@email.com>
  (ID:  05.18)


- Selected items should not be deselected when the window is updated.

  - Nils Goers <nils@goers.line.org>
  - Hannu Nevalainen <henk@it.kth.se>
  2- Jody Tierney <jtierney@cyberlink-inc.com>
   - Glenn Edward <glenn_edw@email.com>
  (ID:  05.19)


- Size Check totals to survive entering & exiting dirs.
  Ex:  Call Check on a dir, enter the dir, exit the dir, & still have the total
      displayed.

  - Edith Goldstein <edgo@ca-aug.org>
  2- Fredrik Ismyren <myrn@tjohoo.se>
  (ID:  05.20)


- Option to not reactivate the last-used window after an external prg is run.

  - Nils Goers <nils@goers.line.org>
  (ID:  05.23)


- Dir windows are AppWindows when DM is running on the WB screen.

  -  Fabrizio Bartoloni <Lanch@mail.caribusiness.it>
  2- Dr. Flay <dr@flay.doktor.co.uk>
  (ID:  05.25)


- Drag & drop files between windows.

  - Moses Wildermuth <mosespro@ecity.net>
  (ID:  05.28)


- "Back" button, like in a browser, to recall previously visited directories.

  - Chris <flat.black@erols.com>
  (ID:  05.29)


- Clicking in window's left (or even right) border goes to parent dir (like DOpus).

  - Dienes Peter <dienes2@freemail.hu>
  (ID:  05.30)


- Press a key & the lister scrolls to the first file beginning with that letter.

  - Dr. Flay <dr@flay.doktor.co.uk>
  (ID:  05.31)


- Ability to use separate colors for devices, volumes, & assigns in the device lists.

  - Dr. Flay <dr@flay.doktor.co.uk>
  (ID:  05.32)


- Ability to set colors for different file types in the listers.

  - Dr. Flay <dr@flay.doktor.co.uk>
  (ID:  05.33)


- The Control menu should be removed completely and added as popup to the
 dirlist window resp. the selector for Src/Dest.

  - Gerd Frank <Gerd.Frank@gmx.de>
  (ID:  05.34)


- Filename should not be deselected if operation has been aborted, or otherwise failed.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  05.35)


- Change window auto-scroll to position each selected filename being processed
 at as close to window's midway point as list limits permit.  Scrolling either
 up or down, to position hidden selections into view, as a command first executes.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  05.36)


- Add "Alt" keys as modifier to scroll arrows.  Effect would be to jump to top or
 bottom of list, left or right of lines.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  05.37)


- Source/Destination selection:
 There is no need for any PopUpMenus or ReAction classes or other
 external stuff which only blowup DM2!
   It should be possible to do such things as fixing as source or destination
 window or do some other goodies just by opening another command window
 with all the needed functions. Another idea, you could add the new menu functions
 display format, width and numbers too and remove it from the main menu.
   The regarding button in the command window could be used
 for adding or changing existing commands...

  - Gerd Frank <Gerd.Frank@gmx.de>
  (ID:  05.38)


- If a directory is renamed, and other listers are showing subdirectories of the
 renamed dir, then the lister's paths should be updated with the new name.
 Ex:  If "RAM:adir" is renamed to "RAM:bdir", then a lister displaying "RAM:adir/x/y"
 should have its path changed to "RAM:bdir/x/y".

  - Glenn Edward <glenn_edw@email.com>
  (ID:  05.38)


- Move through listers, (de)select files using the keyboard.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  05.39)


- "Following or snap windows" function.  When moving the cmd window the lister windows
 would follow.

  - Gerd Frank <mainactor@gmx.net>
  (ID:  05.40)


S06.  Flags
===========
- The file name without its extension.

  - Fredrik Ismyren <myrn@tjohoo.se>
  (ID:  06.01)


- Variable for the first file selected in dest. dir. (could be used for file
 merges, sorts, etc.)

  - T.L.Bullock <havoq@pandemonia.demon.co.uk>
  (ID:  06.02)


- A path's root directory.  Ex:  Return "SYS:" for "SYS:Storage/DOSDrivers/".

  - Fredrik Ismyren <myrn@tjohoo.se>
  (ID:  06.03)


- %S, a "sticky" version of "%s" - When a file (%s) is copied, "%S" would be
 the filename with the full destination path (basically "%d%n").

  - Fredrik Ismyren <myrn@tjohoo.se>
  (ID:  06.04)


- %m, all selected entries with full paths (multi-selection).
  - Nils Goers <nils@goers.line.org>
  (ID:  06.05)


- Each use of %s [or maybe a new flag?  - J.] to expand to the next selected
 entry.
 Ex:  "Show3Files %s %s %s" - The first "%s" would be the first selected
 entry, the second "%s" would be the second selected entry, etc.

  - Nils Goers <nils@goers.line.org>
  (ID:  06.06)


- A flag like %s (or %m) but that also allows no files to be selected.
  Ex:  Visage %M  - Visage will be passed all selected files, or run even if
  no files are selected.

  - Fredrik Ismyren <myrn@tjohoo.se>
  (ID:  06.07)



S07.  Keyboard
==============
- Recognize qualifier combinations.  Ex:  rshift ctrl q = Right Shift + Control + q
                                          lamiga lalt m = Left Amiga + Left Alt + m

  - Dave Weeks <dotoran@net.bluemoon.net>
    Manuel Martin-Vivaldi <manuel@webmedia.es>
  (ID:  07.01)


- Much more keyboard support (TAB, function keys, cursor keys...).

  - Karen Lindsey <ksl@usa.net>
    Wojciech Kocjan <kocjan@ka.onet.pl>
    Nils Goers <nils@goers.line.org>
    Hannu Nevalainen <henk@it.kth.se>
    Manuel Martín-Vivaldi <manuel@webmedia.es>
  (ID:  07.02)


- Suggested keys/functions:
  - <TAB> - Change from one window to another (excluding CMD windows).
    (ID:  07.03)
  - a-z - Jump to the first entry beginning w/ that letter.
    (ID:  07.04)

    - Nils Goers <nils@goers.line.org>

  - <Space> - Select/deselect entries.
  (ID:  07.07)

    - Rudolph Riedel <rriedel@amiga.ON-Luebeck.de>
    2- Wojciech Kocjan <kocjan@ka.onet.pl>

  - Hold down CTRL to "look" for a file (like Norton on the PC).
  (ID:  07.08)

    - Wojciech Kocjan <kocjan@ka.onet.pl>


- Keypress recorder for AddKeyCommand (able to read HELP, F-keys, etc.).
  (ID:  07.09)

  - Hannu Nevalainen <henk@it.kth.se>



S08.  Menus
===========
- v39-style command keys in menus (CTRL, ALT, etc).

  - Hans Guijt <H.Guijt@inter.NL.net>:
  (ID:  08.02)


- Menu to keep track of hidden windows; pop them to front.

  - Hans Guijt <H.Guijt@inter.NL.net>:
  (ID:  08.03)


- Sub-menus.

  -  Chris Hall <hybrid@slinknet.com>
     Dave Pierson <fishb@gte.net>
  2- Nils Goers <nils@goers.line.org>
  (ID:  08.04)


- Checkflags for menu items, e.g. sort modes.

  - Gerd Frank <Gerd.Frank@gmx.de>
  (ID:  08.06)



S09.  Misc.
===========
- Middle mouse button support.

  - Micheal Green <MFG21@student.canterbury.ac.nz>
  (ID:  09.04)


- Treat archives as directories; display their contents in a window & add or
  extract files from them.

  - Micheal Green <MFG21@student.canterbury.ac.nz>
  (ID:  09.05)


- Macro recorder; allow recording, playback, and saving.

  -  Hans Guijt <H.Guijt@inter.NL.net>:
  2- Erik van 't Hof <e.van't.hof@freeler.nl>
  (ID:  09.06)


- Ability to execute commands w/ or w/o args.
  Ex:  "HippoPlayer %s" -> Run HippoPlayer even if nothing's selected.

  - Fredrik Ismyren <myrn@tjohoo.se>
  (ID:  09.09)


- Real buttons.

  - Jody Tierney <jtierney@cyberlink-inc.com>
  (ID:  09.13)


- Ability to use a different font for CMD windows.

  - Nils Goers <nils@goers.line.org>
  2- Gerd Frank <Gerd.Frank@gmx.de>
  (ID:  09.16)


- Ability to treat comments like fine names:  sort, select, move, & rename.

  - Martin Samuelsson <sam@furry.nu>
  (ID:  09.17)


- Ability to close StdIO windows w/ the right mouse button.

  - Fredrik Ismyren <myrn@tjohoo.se>
  (ID:  09.18)


- Modularize DM with Plug-Ins.  A user would then only have the features he/she
 needs/wants.

  - Robert Goodlett <goody@eskimo.com>
  (ID:  09.19)


- Buttons like SID II, DOpus, or DiskMagic.  Clicking on them w/ the right
 mouse button switches to a new button list.

  cryto@gridpoint.cnetbbs.net
  (ID:  09.20)


- Require config files to begin with "DM2" to prevent DM from trying to
 interpret other files as DM configurations.
  - Nils Goers <nils@goers.line.org>
  (ID:  09.24)


- Clicking on a command window's "C" button swaps between multiple command
 banks.  "AddCmd.<bank> <title>, <color>, <command>" to set up the banks.
  -  Nils Goers <nils@goers.line.org>
  2- Manuel Martin-Vivaldi <manuel@webmedia.es>
   - Spencer Pearce <spencer@spannerwerx.freeserve.co.uk
   - Richard Mattsson <richard@cloudnet.com>
  (ID:  09.26)


- DM as a Commodity.

  - Moses Wildermuth <mosespro@ecity.net>
  (ID:  09.27)


- Command windows which can be associated/connected to a specific directory
 window.

  - Moses Wildermuth <mosespro@ecity.net>
  (ID:  09.28)


- Option for command windows to have commands laid out horizontally.

  - Moses Wildermuth <mosespro@ecity.net>
  (ID:  09.29)


- Greater control of DM's GUI's appearance (different colors or patterns for
 screens & windows).

  - Moses Wildermuth <mosespro@ecity.net>
  (ID:  09.30)


- Internal functions (like text viewing, copy) to run asynchronously.

  - Christophe Tosello <christophe.tosello@wanadoo.fr>
  (ID:  09.31)


- Ability to set devices as always source or dest.  E.g. Senseless to have
 CD-ROM as Dest (or write-protected floppies (if anyone still uses those :-)
 )).

  - Nils Goers <nils@goers.line.org>
  (ID:  09.34)


- Ability to have scripts executed for disk changes & at shutdown.

  - Nils Goers <nils@goers.line.org>
  (ID:  09.35)


- Overwrite window:  Place the gadgets in two rows to makes the window a lot
 smaller for using with smaller screens.
 Ex:  YES    ALL        RENAME
      NO     NONE     CANCEL
 [Could apply to all requesters with a lot of buttons. - J.]

  - Gerd Frank <Gerd.Frank@gmx.de>
  (ID:  09.45)


- Requesters:  Choice to open at mouse position, centered in active window,
 or centered in screen.

  - Gerd Frank <Gerd.Frank@gmx.de>
  (ID:  09.46)


- DM2 exits, or displays a "Quit, Iconify, Cancel" requester, when the last
 CMD window is closed

  - Gerd Frank <Gerd.Frank@gmx.de>
  (ID:  09.47)


- Ability to set a name to appear in a command window's titlebar.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  09.48)


- Option for BarFormat, TitleFormat, and the file-exists warning requester
 to use SetX's thousands separator character.

  - Javier de las Rivas <javierdlr@jazzfree.com>
  (ID:  09.49)



S10.  Text Viewer
=================
- Print.

  - Hannu Nevalainen <henk@it.kth.se>
  2- Glenn Edward <glenn_edw@email.com>
  (ID:  10.05)


- A toggling "hide" feature triggered by a brief RMB click, on any part of the
 Read screen. Read's top edge text window would remain fixed (11?), but the Read
 titlebar vanishes to expose DM's own screen titlebar. RMB click again, and it's
 back.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.08)


- When the Read screen is behind one or more Dir-list windows, a LMB click on
 any of these, also returns Read's titlebar.  Deselecting the Read screen,
 un-hides its titlebar.  Then it can be seen over top of DM's screen titlebar,
 and a LMB click selects it again.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.09)


- A delay for the RMB click-to-exit to prevent accidental exits.  (ID:  10.10)
  ...or exit only on a RMB double-click.  (ID:  10.23)

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.10)


- Ability to set Zoom-dimensions for the Read window.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.11)


- Highlighted text copied to clipboard only after a keypress, to prevent
 accidental clipping.
 [An optional qualifier key would be easy to add.  -J.]

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.12)


- When deselected, the reader's window moves to the top of the screen, and back
 to its previous position when active.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.13)


- Selected text remains highlighted after LMB is released, until copied to
 clipboard by pressing a key.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.14)


- More titlebar status messages.
  Ex:  "Searching..." or "Searching for <text>..."

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.15)


- More status messages in the titlebar:
  - "Searching for <text>..."   (ID:  10.16)
  - "Search found <x> items"    (ID:  10.17)
  - "...copied to Clipboard/0"  (ID:  10.18)

  - Glenn Edward <glenn_edw@email.com>


- Reset the titlebar before performing a new search to clear any old
 "Pattern not found" messages.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.19)


- Support for encrypted crunched files.

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.20)


- Search requester's titlebar reflects whether the search begins at the
 current line (user pressed "s") or at the top of the file ("S").

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.21)


- Ability to use "Read SEARCH" only on certain types of files, such as "*.txt",
 "*.doc", "*.html", "*.guide".

  - Glenn Edward <glenn_edw@email.com>
  (ID:  10.22)



S10.  DMPrefs
=============
- [x]Format string gadgets to have a chooser-gadget listing the variables.

  - Javier de las Rivas <javierdlr@jazzfree.com>
  2- Gerd Frank <mainactor@gmx.net>
  (ID:  11.01)


- The CycleGadget of the screen selection could be removed by using custom
 screenmode lists within the screenmode selector with a list of all public screens.

  - Gerd Frank <mainactor@gmx.net>
  (ID:  11.02)


- More Style Guide compliant.  E.g. "Save" button uses current file name, and a menu
 with "Save As..." and other standard Prefs menu items.

  - Gerd Frank <mainactor@gmx.net>
  (ID:  11.03)

@endnode
@node "xrename" "xrename"
@REMARK .2
@{b}------------------------------------------------------------------------------
                              [Rename]
------------------------------------------------------------------------------@{ub}

@{b}Rename:@{ub} If this flag is set, a requester will ask for the name
        that is to be set for the copy of the file.

        Notice well that this requester has three gadgets:

        "OK" "Skip" "Cancel"

        Pressing "OK" or >Enter< confirms that you agree with the displayed name.

        Pressing "Skip" just quits the rename-requester so the file will
        be copied/moved under it`s original name.

        Pressing "Cancel" stops the whole action - nothing gets copied/moved anymore.
@endnode
@node "xwarn" "Warn Option"
@REMARK .3
@{b}------------------------------------------------------------------------------
                                 [Warn]
------------------------------------------------------------------------------@{ub}

@{b}Warn:@{ub} If this flag is set and a file of the same name exists in the
      destination directory then a requester will appear asking  for
      confirmation before overwriting the destination file.

      The requester will display the size and last-modified date and
      time of both the source and destination files, and present five
      options:

      "Yes" "All" "Rename..." "None" "No" "Cancel"

      "Yes" or >Enter< confirms that you wish the destination
      file to be overwritten.

      "All" confirms that you wish to overwrite the destination file
      @{b}and also suppresses any further Warn requesters@{ub} for the
      current Copy/Move operation.
      @{b}Any existing files in the destination directory will be
      overwritten@{ub}.

      "Rename..." opens a requester allowing you to choose a new name
      for the destination file.  @{"More info" link "xrename" 0}.

      "None" is the opposite of "All".  It signals that you do not want to
      overwrite the destination file @{b}and also suppresses any further Warn
      requesters@{ub} for the current Copy/Move operation.  Any existing files in
      the destination directory will @{b}not@{ub} be overwritten.
      These not processed source-files are kept selected.

      "No" will not overwrite the destination file.
      The source-file is been kept selected.

      "Cancel" stops the entire Copy/Move operation.
@endnode
@node "ShowPic" "ShowPic"
@REMARK .2
@{b}------------------------------------------------------------------------------
                              ShowPic (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Displays IFF ILBM picture files, or plays IFF 8SVX sound files.

* removed in 2.2b3 - use @{"View" link "View" 0} now.
@endnode
@node "Single" "Single"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                 Single
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} This function tells the (@{"recursive" link "recursive" 0}) function to occur only once
          when activated, regardless of how many files are selected.

@{b}Syntax:@{ub} Single

@{b}Arguments:@{ub} None

@{b}Example:@{ub}

 Single;Delete %s

Would delete only one selected file, without deleting any
directory or its contents.

@endnode
@node "Slave" "The stupid that hacked all this text into his machine..."
@REMARK .9
@{b}-------------------------------------------------------------------------------
                                    Author
-------------------------------------------------------------------------------@{ub}

Yep, my name is Rudolph, exactly like the famous Reindeer... :^)

I was born 24.01.1972 in Ratzeburg, Germany

Scene-Life:

Group: Star Cracks Inc. - C64
Handle: Cat
Function: Coder / Cracker

Group: Paralyze - C64
Handle: Shadowolf
Function: Demo-Coder, Leader more or less

Group: Incal!
Function: Party anymal!


Today I`m working for a company that develops and tests all
kind of components used in cars.

Additionally I am "studying" three evenings per week
since August 2002 to achieve the grade of a
"staatlich geprüfter Techniker, Elektrotechnik/Datenverarbeitungstechnik"
in October 2006.
This could be roughly compared to a bachalor of computer-science.


I`m only a dedicated DiskMaster2 user who was fed up with seeing
this fantastic program dying.

If you have any questions about DiskMaster2,
feel free to contact me at:

@{b} rudolph.riedel@t-online.de@{ub}

Please use "@{b}diskmaster2@{ub}" somewhere in the subject, this will help
me to bring back some structure into my pm.

I also like to receive your DiskMaster2.prefs and ARexx-Scripts for DiskMaster2.

However it may be more efficent to direct questions to
the DiskMaster2 @{"mailing list" link "mailing"}.


Or give me a phone call: +0049 5373 331639
Just make sure it's not 3AM in Germany. :-)


My Amithlon system:

Mainboard Elitegroup K7VZA 3.0, 768 MB SD-RAM, XP2400+,
GForce4/64 MB, Toshiba 1612 DVD drive, 3Com 3C905-TX networking-card.
4 gig HD.
Kickstart/WB 4 beta.

My A1:

G3SE/600 MHz, 512 MB, Radeon 9250 AGP, Toshiba 16x DVD,
40 gig Maxtor HD, SII0680 IDE card.
Kickstart/WB 4 beta.


Dedicated to Angela, the most wonderful reason for my
problem with getting enough spare time...
@endnode

@node "SmegHead" "'Colourless green ideas sleep furiously.' - Prof. Noam Chomsky"
@REMARK .3
@{b}-------------------------------------------------------------------------------
                                Idea Collector
-------------------------------------------------------------------------------@{ub}

  Bitten by a radioactive spider...  No, wait, that wasn't me.  I don't spin
a web (any size) or capture thieves just like flies, but I @{u}do@{uu} collect ideas
for new DiskMaster2 features and suggestions for improving existing ones.

Name:       Jody Tierney
Born:       May 8, 1970
Home:       Elkhart, Indiana - USA

Amiga:      A1200 - WB 3.9
            Blizzard 1260
            2MB Chip/48MB Fast RAM, 1.62GB HD
            RBM TowerHawk 1200 II case & Zorro II slots
            Picasso II gfx card

Hobbies:    Programming - C, ARexx
            Graphics
            Reading - Science fiction, science, comic books, philosophy,
                      Playboy, biography
            Procrastinating  :-)

Trivia:     In high school, I was voted most likely to be least likely voted
            "most likely" anything.  :-)

Home page:  http://home.earthlink.net/~jodytierney/


Send your DiskMaster2 suggestions to:  @{b}jodytierney@earthlink.net@{ub}
(I'll also see/collect them if you post to the DiskMaster2 @{"mailing list" link "mailing"}.)
@endnode
@node "Sort" "Sort"
@REMARK .6
@{b}------------------------------------------------------------------------------
                                  Sort
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Changes the sorting method.

@{b}Syntax:@{ub} Sort [ N(-) | S(-) | D(-) | C(-) | E(-) | L(-) | F | T ] [G]

@{b}Arguments:@{ub}

@{b}N@{ub}: Sorts the active window by name.

@{b}N-@{ub}: Sorts the active window by name in reverse order.

@{b}S@{ub} Sorts the active window by size, smallest file displayed first.

@{b}S-@{ub}: Sorts the active window by by size, biggest file displayed first.

@{b}D@{ub}: Sorts the active window by date, newest file first.

@{b}D-@{ub}: Sorts the active window by date, oldest file first.

@{b}C@{ub}: Sorts the active window by comment.

@{b}C-@{ub}: Sorts the active window by comment in reverse order.

@{b}E@{ub}: Sorts the active window by extension.
   All DiskMaster2 does here is to scan the filenames from right to left
   for the first occurrence of the dot-char: "." .
   All what's right from the dot is called extension.
   .zip .exe .info .mp3 .gif .jpg .backdrop .html .library .catalog .prefs ...

@{b}E-@{ub}: Sorts the active window by extension in reverse order.

@{b}L@{ub}: Sorts the active window by length of the entries names.

@{b}L-@{ub}: Sorts the active window by length in reverse order.

@{b}T@{ub}: Toggles the sort-mode from the current-one to the next.
   The order is NSDCE.
   It will keep the direction and you can`t toggle in or out
   of the 'F' mode.

In all these modes, the drawers are always on top of the lists.

@{b}F@{ub}: Disables all sorting, added for testing purposes.
   Will be removed in a future release.

@{b}G@{ub}: Global-Flag, resets all windows to the same sort-type.

@{b}Examples:@{ub}

 Sort N

The active window will be sorted by name.

 Sort S-

The active window will be sorted by size, biggest file first.

 Sort D- G

All windows will be sorted by date, oldest file first.

 Sort G

All windows will be sorted by the last selected sort-type.

 Sort T

The active window will be sorted by the next mode in line.
If it has been sorted by name it will be sorted by size then.
@endnode
@node "Status" "Status"
@REMARK .1
@{b}------------------------------------------------------------------------------
                               Status @{b}(ARexx Only)@{ub}
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Returns string in result for ARexx programs.

@{b}Syntax:@{ub} Status <D|E|F|H|P|S|V|W>

@{b}Arguments:@{ub}

@{b}D:@{ub} Returns the current destination path.

@{b}E:@{ub} Returns the amount of files within the source window.

@{b}F:@{ub} Returns the current file display format.

@{b}H:@{ub} Returns the host screen name or the name of the public screen
   that is identical with the port-name and the task-name.

@{b}P:@{ub} Returns the current path of the source window.

@{b}S:@{ub} Returns the amount of selected files within the source window.

@{b}V:@{ub} Returns "DiskMaster 3.4" or whatever the current version is.

@{b}W:@{ub} Returns the number of the window currently active.

@{b}Example:@{ub}

 Status P

@endnode
@node "StdIO" "StdIO"
@REMARK .2
@{b}------------------------------------------------------------------------------
                                 StdIO
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Opens or closes an Input/Output window to allow
          interaction with external program.

@{b}Syntax:@{ub} StdIO [filespec] [CLOSE]

@{b}Arguments:@{ub}

@{b}filespec:@{ub} Standard console window information such as the
          console handler, window dimensions and window title.

@{b}Close:@{ub} Closes previously opened I/O window.
       This argument may appear at the end of the command string which
       opened the I/O window.

@{b}Examples:@{ub}

 StdIO "CON:240/20/260/40/DiskMaster2 I/O"

Opens a console window.

 StdIO CLOSE

Closes the window.

Note: The I/O window opened by DiskMaster2 is NOT a CLI window.
It is available to provide a method of program interaction for those programs
which such, but do not supply their own method of communication.

* This function will add an "/SCREENDM.n" automatically to your StdIO string
to make sure that the window will always open on the right screen.
@endnode
@node "Swap" "Swap"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                  Swap
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Swaps the directory paths between two windows.

@{b}Syntax:@{ub} Swap [ID]

@{b}Arguments:@{ub}

@{b}ID:@{ub} An optional number to identify the window that swaps it`s
             path with the source window.

@{b}Examples:@{ub}

 Swap

This will swap the directory paths between source and destination window.

 Swap 0

This will swap the directory paths of the source-window and the window
with the number '0' as long it`s existing and not the CMD window.

 Swap 240

Will likely swap the directory paths between source and destination window
as no-one will have 240 windows opened...

@endnode
@node "SwapSelect" "SwapSelect"
@REMARK .1
@{b}------------------------------------------------------------------------------
                              SwapSelect
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Simply toggles all files from selected state to
          deselected state and vice versa.

          Purpose: When you have a large list of files and wish to
                   manipulate the most of them you may now select only
                   those files you don`t want to Copy/Move/Delete or
                   whatsoever and call 'SwapSel'.

@{b}Syntax:@{ub} SwapSel

@{b}Arguments:@{ub} None

* This is kind of experimental, it may become part of @{"Select" link "Select" 0}
  in a future release.

@endnode
@node "Team" "Currently under development by:"
@REMARK .3
@{b}-------------------------------------------------------------------------------
                                 The Team:
-------------------------------------------------------------------------------@{ub}

@{"Rudolph Riedel" link "Slave" 0}    Responsible for all the bugs lately...

@{"Richard Backhaus" link "Company" 0}  Co-Author, Web-Master, currently off...

@{"Jody Tierney" link "SmegHead" 0}      Coordinator of the to-do list, Co-Author...

@{"Hynek Schlawack" link "Hynek" 0}   Co-Author...

@{"Nils Görs" link "Nils" 0}         Translator, Tester, Co-Author...
@endnode
@node "TitleFormat" "TitleFormat"
@REMARK .4
@{b}------------------------------------------------------------------------------
                                TitleFormat
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Specifies which, and in what order information is
          displayed in the file display window title bar.

@{b}Syntax:@{ub} TitleFormat [%A] [%B] [%C] [%F] [%I] [%O] [%P] [%N] [Text]

@{b}Arguments:@{ub}

@{b}%A:@{ub} The total amount of file`s sizes in a dir.

@{b}%B:@{ub} Total number of bytes in the selected files.

@{b}%C:@{ub} Number of files in directory.

@{b}%F:@{ub} Amount of available (free) space on the volume.

@{b}%I:@{ub} Number of files selected in the window.

@{b}%O:@{ub} Percentage of occupied space on the volume.

@{b}%P:@{ub} Percentage of free space on the volume.

@{b}%N:@{ub} A unique name based on the task-name and the window-number.

@{b}Text:@{ub} Any text that you may want to display in the window title bar.

@{b}Examples:@{ub}

 TitleFormat "Selected: %I of %C files totalling %B out of %A in dir"

Displays a mixture of text and system information resulting in a
window title bar that may appear as below:

@{b}Selected: 5 of 20 files totalling 24674 B out of 142 K in dir@{ub}

 TitleFormat "%B/%F  %I/%C  %A"

All information in a more compact way:

@{b}24674 B/233 M  5/20  142 K@{ub}

 TitleFormat "%N %O/%P - %B/%F  %I/%C  %A"

Adds more information to it:

@{b}DM.1.0 62%/38% - 0/188 M  0/38  700 K@{ub}
@endnode
@node "Tools" "All the little helpers listed..."
@REMARK .3
@{b}------------------------------------------------------------------------------
      This tells more about all the little extra utilities being used:
------------------------------------------------------------------------------@{ub}

Most of the tools I use to expand the capabilities of DiskMaster2
could be found on aminet.
Nevertheless I`ll try to give you more information on all these little
helpers like the complete path on aminet and the version numbers.

@{b}FTPMount@{ub}: Mounts FTP sites as part of a filesystem.
          Version: 1.0
          Path:    Aminet/comm/tcp/FTPMount_1_0.lha

@{b}HTMLess@{ub}:  Converts HTML to standard text files.
          Version: 2.5
          Path:    Aminet/text/hyper/htmless.lha
          Usage:   Extern HTMLess -w %s

From @{b}Fredrik Ismyren@{ub}:

@{b}Den6@{ub}:     Small readable 7x6 font for 640x256 WB.
          It's perfect for Diskmaster2!
          Version: 1.0
          Path:    Aminet/text/font/den6.lzh
                   (Didn't find it in Scandinavia!?)
                   * Also available on Aminet CD 8.

@{b}FiDED@{ub}:    Creates dirfiles from File_ID.diz information.
          Version: 39.503
          Path:    Aminet/comm/misc/FiDED39503.lha

@{b}Nuke@{ub}:     This small program is a secure "delete" command.
          Secure means that the file is physically destroyed
          and cannot be recovered in any way.
          Version: 1.0
          Path:    Aminet/util/sys/Nuke10.lha

@{b}Swipe@{ub}:    A replacement for the "Delete" command which is
          able to remove assigns and to clear the RAM-disk while
          leaving the system directories intact.
          Version: 1.56
          Path:    Aminet/util/sys/Swipe1.56.lha

* please note that these may not the latest versions...
@endnode

@node "UnLock" "UnLock"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                 UnLock
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Unlocks the selected window, or all windows.

@{b}Syntax:@{ub} UnLock [ALL]

@{b}Arguments:@{ub}

@{b}(no arg):@{ub} Unlocks the currently selected window.

@{b}ALL:@{ub} Unlocks all windows.

@endnode
@node "UnMark" "UnMark"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                UnMark
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Enables or Disables automatic deselection of files during operations.
          This feature allows multiple operations to be performed
          on a set of selected files without the need of
          re-selecting them after each operation.

@{b}Syntax:@{ub}  UnMark [ON|OFF]

@{b}Arguments:@{ub}

@{b}ON:@{ub} Enables deselection.

@{b}OFF:@{ub} Disables deselection.

@{b}Example:@{ub}

 UnMark OFF;Copy @{"%s" link "flags" 0} @{"%d" link "flags" 0}

Copies all selected files without deselecting them.

@endnode
@node "Unpack" "Unpack"
@REMARK .4
@{b}------------------------------------------------------------------------------
                             Unpack (@{"Recursive" link "recursive" 0})
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Decompresses a file.
*Note:  This function requires xfdmaster.library v37 or above.
*Note:  Unpack has been completely rewritten for 2.5b6.  Many differences
        exist between this and the original version.

@{b}Syntax:@{ub} Unpack <@{"file" link "file" 0}> [TO @{"<dest>" link "dest"}] [KEEPORIG]

@{b}Arguments:@{ub}
@{b}TO@{ub}:  Where to store The new, decompressed file.  This may be a path, a full
     path/name, or a DiskMaster2 @{"flag" link "flags"} such as @{"%d" link "flags"}.
     Default:  Same directory/name as the source file.

@{b}KEEPORIG@{ub}:  The original, compressed file is not deleted.  An ".old"
           suffix will be appended if the decompressed file has the same name
           as the original.
           Default:  The original file is deleted if Unpack succeeds.


@{b}Examples:@{ub}
Unpack @{"%s" link "flags" 0}
  The selected file is unpacked, overwriting the original file.

Unpack @{"%s" link "flags" 0} TO @{"%d" link "flags"} KEEPORIG
  The selected file is decrunched and saved to the @{"%d" link "flags"} directory.   The
decompressed file has the same name as the original.  The original file is
not deleted.
@endnode
@node "upgrade" "There are six million ways to upgrade, choose one... :-)"
@REMARK .3
@{b}------------------------------------------------------------------------------
                 How to upgrade from older versions of DiskMaster2
------------------------------------------------------------------------------@{ub}

Starting with DiskMaster 2.6 the configuration file has a new name.
Instead of "Startup.DM" it is called "DiskMaster2.prefs" now.

When you are upgrading from some 2.5.x version all you need to do is
to rename your configuration to "DiskMaster2.prefs".

If you happen to get unexpected requesters asking for command-lines
this is because you have empty 'AddCmd' lines in your configuration.
Please change these to "AddCmd #".


Now if you are upgrading from 2.4 or earlier you should not just
rename your "Startup.DM" because it is not really compatible
with later releases.

Start DiskMaster2 with the default setup, select a proper screenmode,
arrange the windows as you like and have a look at the @{"DMPrefs" link "DMPrefs" 0}
requester to further adjust your setup.

Then save this configuration back to disk as "S:DiskMaster2.prefs" and use
it as a starting point to which you can add all your personal settings
from your old version, mostly by just copying the lines.


Additionally you can find a tutorial from Bonnie Dalzell here:

 <http://www.batw.net/my_dm2_tutorial.html>


There are only a few commands that have been removed
since 2.1c, have a look here: @{"Removed Functions" link "removed" 0}.

These are:

 DiskCopy, Format, Play, BackPattern, ShowPic, Print,
 SetPrinter, OpenScreen, Priority

DiskCopy and Format just became obsolete with harddisk based systems.

Print and SetPrinter never fitted in the DiskMaster2 context
and after trying to update the (partly broken and ugly) SetPrinter GUI
it was decided that it makes no sense anymore to support these.

ShowPic and Play were poorly implemented in assembly and just failed
with modern hardware where specialised tools can do a much better job.
A basic datatypes viewer is implemented as replacement: @{"View" link "View" 0}.

OpenScreen has been replaced with @{"NewScreen" link "NewScreen" 0}.

BackPattern was completely useless - I have never seen a DiskMaster2
config which did not fill the whole screen with windows...

Priority has been considered system-unfriendly.


This could be helpfull: @{"General Information" link "GInfo".


Now for necessary changes to make your old configuration work.

You should already have the necessary new @{"NewScreen" link "NewScreen" 0} and
@{"OpenWindow" link "OpenWindow" 0} lines if you created a new DiskMaster2.prefs
to start with as suggested above.

Let's see what you get when you just start DiskMaster2 on your system and
select a 1024*768*32 mode from the screenmmode-requester:

 ;DiskMaster 2.6

This comment is automatically added and at some point in the future
DiskMaster2 will use it to issue a warning-requester if the version does not fit.

 Reset
 Pens 1 0 1 2 3 0 2 0 2 1 0 1 2 0 2 1 2 1 0 1 2 1 0 3 2 1 0 1 2 1 3 2 2 1 1 0 1 0 1 1 2 1 1 1 1

Nothing changed here.
The huge amount of pens is there because this is an OS4 system.

 NewScreen ID=1342378755 D=24 W=1024 H=768 F=XEN.font FS=8

Just check @{"NewScreen" link "NewScreen" 0}.

 Color OFFSET=0 888888 000000 EEEEEE 446688 999999 AAAAAA BBBBBB 665577

New for 2.6, @{"Color" link "Color" 0} supports 24 bits now, but the original
command-line will still work.

 Font DIRWIN=topaz.font 8 DIRGAD=topaz.font 8

This one really has changed. Look here: @{"Font" link "Font" 0}.

 SetX BPen=0 DPen=2 FPen=1 SPen=0

A new command to set various options: @{"SetX" link "SetX" 0}.

 Button "Parent"

Nothing changed here.

 SetFormat "N S C"

Almost the same as always: @{"SetFormat" link "SetFormat" 0}.

 BarFormat "DiskMaster %V  %T   C:%C  F:%F  Total:%P"
 TitleFormat "%B/%F %I/%C"

These two have new options: @{"BarFormat" link "BarFormat" 0}, @{"TitleFormat" link "TitleFormat" 0}.

 OpenWindow Path="sys:" Left=0 Top=11 Width=408 Height=757 ZoomL=0 ZoomT=11 ZoomW=65 ZoomH=65

This has also changed significantly:@{"OpenWindow" link "OpenWindow" 0}.

 Sort N

This has a bunch of new options: @{"Sort" link "Sort" 0}.

 OpenWindow Path="ram:" Left=612 Top=11 Width=408 Height=757 ZoomL=612 ZoomT=11 ZoomW=65 ZoomH=65
 Sort N

 OpenWindow CMD Left=408 Top=11 Width=204 Height=757 ZoomL=408 ZoomT=11 ZoomW=65 ZoomH=65

 AddCmd Root, 10, 01, Root

Almost the same as always: @{"AddCommand" link "AddCmd" 0}.
Old lines still should work.

 [...]

 AddMenu DiskMaster2, About (F1)..., ?, About
 AddMenu DiskMaster2, BARLABEL,

Almost the same as always: @{"AddMenuCommand" link "AddMenuCmd" 0}.
Old lines still should work.

 AddAutoCmd (FORM????ILBM#?|@database#?|??????JFIF#?|GIF8#?),View %s

Old lines won't work at all since DiskMaster2 uses DOS pattern matching
now to do the job: @{"AddAutoCommand" link "AddAutoCmd" 0}.

 AddKeyCmd f1,about

This one only has been enhanced: @{"AddKeyCommand" link "AddKeyCmd" 0}


For a detailed history check @{"The Past!" link "past" 0}.
@endnode
@node "View" "View"
@REMARK .4
@{b}------------------------------------------------------------------------------
                                  View
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} A simple datatypes viewer.
          It calls Amigaguide.library to open the file you selected.
          This means you are able to view all files you have a valid
          datatype for.

@{b}Syntax:@{ub} View [@{"file" link "file" 0}] [ASYNC]

@{b}Arguments:@{ub}

@{b}ASYNC:@{ub} View will run in a separate process, and not block input to DiskMaster2.

@{b}Examples:@{ub}

AddMenu GFX, View, View @{"%s" link "flags" 0}

Defines a menu-entry that enables you to view all kind of files on demand.

AddAutoCmd @database#?, View @{"%s" link "flags" 0}

Defines an autocommand that reacts on double-clicked .guide files.

AddAutoCmd DEFAULT,View @{"%s" link "flags" 0} ASYNC

Defines an autocommand that reacts on all double-clicked files you
haven`t defined a special auto-command for.  DiskMaster2 is free to
perform other operations while this window is open.

* This is the first step to give you back both 'ShowPic' and 'Play'.
@endnode
@node "Wait" "Wait"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                  Wait
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Causes a timed delay or a cued delay.

@{b}Syntax:@{ub} Wait [seconds|text]

@{b}Arguments:@{ub}

@{b}(no arg):@{ub} Asks user to press [return] (A StdIO window must be open)

@{b}seconds:@{ub}  The number of seconds to wait before proceeding with
          the remainder of the command string.

@{b}text:@{ub} The text that will remind the user to press [return].

@{b}Examples:@{ub}

 Wait 4

Waits for 4 seconds.

 Wait "Please press RETURN.....NOW!"

Waits until the user has pressed the [return] key.
@endnode
@node "Window" "Window"
@REMARK .1
@{b}------------------------------------------------------------------------------
                                Window
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Selects a window, making it the source window.

@{b}Syntax:@{ub} Window <Path|Dest|Next>

@{b}Arguments:@{ub}

@{b}Path:@{ub} An AmigaDOS path.
      The window that matches the specified path will be selected.

@{b}Dest:@{ub} Selects the destination window.

@{b}Next:@{ub} Selects the window which appears as the next window in the list.

@endnode
@node "WinInfo" "WinInfo"
@REMARK .2
@{b}------------------------------------------------------------------------------
                              WinInfo (ARexx only)
------------------------------------------------------------------------------@{ub}

@{b}Function:@{ub} Returns information about the open windows.

@{b}Syntax:@{ub} WinInfo [id] [path] [status] [var]

@{b}Arguments:@{ub}

@{b}id:@{ub} Returns the id of a window.

@{b}path:@{ub} Returns the current path of a window.

@{b}status:@{ub} Returns the current status of a window.
        SOURCE, DEST, CMD or OFF

@{b}var:@{ub} Change the base name of the stem var from LIST to whatever
     you specify within the next argument.


@{b}Examples:@{ub}

-----
address DM.1
Wininfo path id status
do i=1 to list
say list.id.i list.path.i list.status.i
end
-----

Print out the id, path and status of all windows currently open.

-----
address DM.1
Wininfo id status var boing
do i=1 to boing
 say boing.id boing.status
end
-----

Print out the id and status of all windows open using the stem-var "boing".

-----
address DM.1
Wininfo
say list
end
-----

Just prints the number of windows currently open.
@endnode
